{"version":3,"sources":["cron-gen.module.js","templates.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_slicedToArray","arr","Array","isArray","_arrayWithHoles","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","iter","from","_iterableToArray","_nonIterableSpread","o","minLen","n","toString","call","slice","constructor","name","test","len","arr2","CronGenTimeSelect","$scope","cronGenService","_this","this","selectOptions","minutes","range","seconds","hourTypes","$watch","hours","use24HourTime","ACCEPTABLE_CRON_FORMATS","States","INIT","DIRTY","CLEAN","CronGenComponent","$translate","$filter","parsedOptions","mergeDefaultOptions","options","use","language","angular","extend","filter","translate","cronFormat","currentState","activeTab","hideMinutesTab","hideHourlyTab","hideDailyTab","hideWeeklyTab","hideMonthlyTab","hideYearlyTab","hideAdvancedTab","state","hourly","daily","subTab","everyDays","days","hourType","everyWeekDay","weekly","MON","TUE","WED","THU","FRI","SAT","SUN","monthly","specificDay","day","months","specificWeekDay","monthWeek","yearly","specificMonthDay","month","specificMonthWeek","advanced","expression","indexOf","concat","cron","handleModelChange","optionsChanged","bind","_this2","formCtrl","ngModelCtrl","$validators","testCronExpr","isValid","$event","tab","preventDefault","ngDisabled","regenerateCron","monthWeekNumber","monthNumber","monthDay","appendInt","hour","formInputClass","formSelectClass","formRadioClass","formCheckboxClass","hideSeconds","_this3","ngModel","hourToCron","_days","reduce","acc","join","_this4","segments","split","_parsedHours8","_parsedHours10","_segments2","_minutes","_hours","_dayOfMonth","_month","_dayOfWeek","match","parseInt","substring","_parsedHours7","processHour","getHourType","forEach","weekDay","_parsedHours9","_parsedHours11","_parsedHours","_parsedHours4","_day","_segments","dayOfMonth","dayOfWeek","parsedHours","_parsedHours2","_parsedHours3","substr","_parsedHours5","_monthWeek","_parsedHours6","QUARTZ_REGEX","CronGenService","formattedExpression","toUpperCase","number","charAt","start","end","map","val","idx","monthWeeks","fullMinutes","monthDays","monthDaysWithLasts","module","config","$translateProvider","translations","MINUTES","HOURLY","DAILY","WEEKLY","MONTHLY","YEARLY","ADVANCED","EVERY","EVERY_MONTH","MINUTE","ON_SECOND","HOUR_ON_MINUTE","AND_SECOND","DAY_AT","EVERY_WEEK_WORKING_DAY","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","SUNDAY","START_TIME","ON_THE","ON_THE_SMALL","OF_EVERY","MONTHS_AT","AT","OF","CRON_EXPRESSION","MORE_DETAILS","HERE","LAST_DAY","LAST_WEEKDAY","FIRST_WEEKDAY","DAY","FIRST_PREFIX","SECOND_PREFIX","THIRD_PREFIX","CARDINAL_PREFIX","FIRST","SECOND","THIRD","FOURTH","FIFTH","LAST","JANUARY","FEBRUARY","MARCH","APRIL","MAY","JUNE","JULY","AUGUST","SEPTEMBER","OCTOBER","NOVEMBER","DECEMBER","service","component","bindings","isDisabled","onChange","isRequired","model","selectClass","namePrefix","templateUrl","controller","require","ngDisabledCtrl","$attrs","$templateCache","put"],"mappings":"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","file":"cron-gen.min.js","sourcesContent":["(function () {\n  'use strict';\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n  }\n\n  function _iterableToArrayLimit(arr, i) {\n    if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var ACCEPTABLE_CRON_FORMATS = ['quartz', 'unix'];\n  var States = {\n    INIT: 1,\n    DIRTY: 2,\n    CLEAN: 3\n  };\n  var CronGenComponent = /*#__PURE__*/function () {\n    function CronGenComponent($scope, $translate, $filter, cronGenService) {\n      'ngInject';\n\n      var _this = this;\n\n      _classCallCheck(this, CronGenComponent);\n\n      this.parsedOptions = this.mergeDefaultOptions(this.options);\n      $translate.use(this.parsedOptions.language);\n      angular.extend(this, {\n        cronGenService: cronGenService,\n        filter: $filter,\n        translate: $translate,\n        cronFormat: 'quartz',\n        currentState: States.INIT,\n        activeTab: function () {\n          if (!_this.parsedOptions.hideMinutesTab) {\n            return 'minutes';\n          } else if (!_this.parsedOptions.hideHourlyTab) {\n            return 'hourly';\n          } else if (!_this.parsedOptions.hideDailyTab) {\n            return 'daily';\n          } else if (!_this.parsedOptions.hideWeeklyTab) {\n            return 'weekly';\n          } else if (!_this.parsedOptions.hideMonthlyTab) {\n            return 'monthly';\n          } else if (!_this.parsedOptions.hideYearlyTab) {\n            return 'yearly';\n          } else if (!_this.parsedOptions.hideAdvancedTab) {\n            return 'advanced';\n          }\n\n          throw 'No tabs available to make active';\n        }(),\n        selectOptions: cronGenService.selectOptions(),\n        state: {\n          minutes: {\n            minutes: 1,\n            seconds: 0\n          },\n          hourly: {\n            hours: 1,\n            minutes: 0,\n            seconds: 0\n          },\n          daily: {\n            subTab: 'everyDays',\n            everyDays: {\n              days: 1,\n              hours: this.parsedOptions.use24HourTime ? 0 : 1,\n              minutes: 0,\n              seconds: 0,\n              hourType: this.parsedOptions.use24HourTime ? null : 'AM'\n            },\n            everyWeekDay: {\n              hours: this.parsedOptions.use24HourTime ? 0 : 1,\n              minutes: 0,\n              seconds: 0,\n              hourType: this.parsedOptions.use24HourTime ? null : 'AM'\n            }\n          },\n          weekly: {\n            MON: true,\n            TUE: false,\n            WED: false,\n            THU: false,\n            FRI: false,\n            SAT: false,\n            SUN: false,\n            hours: this.parsedOptions.use24HourTime ? 0 : 1,\n            minutes: 0,\n            seconds: 0,\n            hourType: this.parsedOptions.use24HourTime ? null : 'AM'\n          },\n          monthly: {\n            subTab: 'specificDay',\n            specificDay: {\n              day: '1',\n              months: 1,\n              hours: this.parsedOptions.use24HourTime ? 0 : 1,\n              minutes: 0,\n              seconds: 0,\n              hourType: this.parsedOptions.use24HourTime ? null : 'AM'\n            },\n            specificWeekDay: {\n              monthWeek: '#1',\n              day: 'MON',\n              months: 1,\n              hours: this.parsedOptions.use24HourTime ? 0 : 1,\n              minutes: 0,\n              seconds: 0,\n              hourType: this.parsedOptions.use24HourTime ? null : 'AM'\n            }\n          },\n          yearly: {\n            subTab: 'specificMonthDay',\n            specificMonthDay: {\n              month: 1,\n              day: '1',\n              hours: this.parsedOptions.use24HourTime ? 0 : 1,\n              minutes: 0,\n              seconds: 0,\n              hourType: this.parsedOptions.use24HourTime ? null : 'AM'\n            },\n            specificMonthWeek: {\n              monthWeek: '#1',\n              day: 'MON',\n              month: 1,\n              hours: this.parsedOptions.use24HourTime ? 0 : 1,\n              minutes: 0,\n              seconds: 0,\n              hourType: this.parsedOptions.use24HourTime ? null : 'AM'\n            }\n          },\n          advanced: {\n            expression: this.cronFormat === 'quartz' ? '0 15 10 L-2 * ?' : '0 6 1 * *'\n          }\n        }\n      }); //Validate our opts\n\n      if (ACCEPTABLE_CRON_FORMATS.indexOf(this.cronFormat) == -1) {\n        throw \"Desired cron format (\".concat(this.cronFormat, \") is not available\");\n      } //On model changes, update our state to reflect the user's input\n\n\n      $scope.$watch('$ctrl.ngModel', function (cron) {\n        return _this.handleModelChange(cron);\n      }); // Watch for option changes\n\n      $scope.$watch('$ctrl.options', this.optionsChanged.bind(this), true);\n    }\n\n    _createClass(CronGenComponent, [{\n      key: \"$onInit\",\n      value: function $onInit() {\n        var _this2 = this;\n\n        //If possible, add our cron expression validator to our form\n        if (this.formCtrl && this.name) {\n          this.ngModelCtrl.$validators.testCronExpr = function (expression) {\n            return _this2.cronGenService.isValid(_this2.cronFormat, expression);\n          };\n        }\n      }\n    }, {\n      key: \"optionsChanged\",\n      value: function optionsChanged(options) {\n        this.parsedOptions = this.mergeDefaultOptions(options);\n        this.translate.use(this.parsedOptions.language);\n      }\n    }, {\n      key: \"setActiveTab\",\n      value: function setActiveTab($event, tab) {\n        $event.preventDefault();\n\n        if (!this.ngDisabled) {\n          this.activeTab = tab;\n          this.regenerateCron();\n        }\n      }\n    }, {\n      key: \"dayDisplay\",\n      value: function dayDisplay(day) {\n        switch (day) {\n          case \"SUN\":\n            return this.filter('translate')('SUNDAY');\n\n          case \"MON\":\n            return this.filter('translate')('MONDAY');\n\n          case \"TUE\":\n            return this.filter('translate')('TUESDAY');\n\n          case \"WED\":\n            return this.filter('translate')('WEDNESDAY');\n\n          case \"THU\":\n            return this.filter('translate')('THURSDAY');\n\n          case \"FRI\":\n            return this.filter('translate')('FRIDAY');\n\n          case \"SAT\":\n            return this.filter('translate')('SATURDAY');\n        }\n      }\n    }, {\n      key: \"monthWeekDisplay\",\n      value: function monthWeekDisplay(monthWeekNumber) {\n        switch (monthWeekNumber) {\n          case \"#1\":\n            return this.filter('translate')('FIRST');\n\n          case \"#2\":\n            return this.filter('translate')('SECOND');\n\n          case \"#3\":\n            return this.filter('translate')('THIRD');\n\n          case \"#4\":\n            return this.filter('translate')('FOURTH');\n\n          case \"#5\":\n            return this.filter('translate')('FIFTH');\n\n          case \"L\":\n            return this.filter('translate')('LAST');\n        }\n      }\n    }, {\n      key: \"monthDisplay\",\n      value: function monthDisplay(monthNumber) {\n        switch (monthNumber) {\n          case 1:\n            return this.filter('translate')('JANUARY');\n\n          case 2:\n            return this.filter('translate')('FEBRUARY');\n\n          case 3:\n            return this.filter('translate')('MARCH');\n\n          case 4:\n            return this.filter('translate')('APRIL');\n\n          case 5:\n            return this.filter('translate')('MAY');\n\n          case 6:\n            return this.filter('translate')('JUNE');\n\n          case 7:\n            return this.filter('translate')('JULY');\n\n          case 8:\n            return this.filter('translate')('AUGUST');\n\n          case 9:\n            return this.filter('translate')('SEPTEMBER');\n\n          case 10:\n            return this.filter('translate')('OCTOBER');\n\n          case 11:\n            return this.filter('translate')('NOVEMBER');\n\n          case 12:\n            return this.filter('translate')('DECEMBER');\n        }\n      }\n    }, {\n      key: \"monthDayDisplay\",\n      value: function monthDayDisplay(monthDay) {\n        if (monthDay === 'L') {\n          return this.filter('translate')('LAST_DAY');\n        } else if (monthDay === 'LW') {\n          return this.filter('translate')('LAST_WEEKDAY');\n        } else if (monthDay === '1W') {\n          return this.filter('translate')('FIRST_WEEKDAY');\n        } else {\n          return \"\".concat(monthDay).concat(this.cronGenService.appendInt(monthDay), \" \").concat(this.filter('translate')('DAY'));\n        }\n      }\n    }, {\n      key: \"processHour\",\n      value: function processHour(hours) {\n        if (this.parsedOptions.use24HourTime) {\n          return hours;\n        } else {\n          return (hours + 11) % 12 + 1;\n        }\n      }\n    }, {\n      key: \"getHourType\",\n      value: function getHourType(hours) {\n        return this.parsedOptions.use24HourTime ? null : hours >= 12 ? 'PM' : 'AM';\n      }\n    }, {\n      key: \"hourToCron\",\n      value: function hourToCron(hour, hourType) {\n        if (this.parsedOptions.use24HourTime) {\n          return hour;\n        } else {\n          return hourType === 'AM' ? hour === 12 ? 0 : hour : hour === 12 ? 12 : hour + 12;\n        }\n      }\n    }, {\n      key: \"mergeDefaultOptions\",\n      value: function mergeDefaultOptions(options) {\n        return angular.extend({\n          formInputClass: 'form-control cron-gen-input',\n          formSelectClass: 'form-control cron-gen-select',\n          formRadioClass: 'cron-gen-radio',\n          formCheckboxClass: 'cron-gen-checkbox',\n          hideMinutesTab: true,\n          hideHourlyTab: true,\n          hideDailyTab: false,\n          hideWeeklyTab: false,\n          hideMonthlyTab: false,\n          hideYearlyTab: false,\n          hideAdvancedTab: true,\n          use24HourTime: true,\n          hideSeconds: true,\n          language: 'en'\n        }, options);\n      }\n    }, {\n      key: \"regenerateCron\",\n      value: function regenerateCron() {\n        var _this3 = this;\n\n        this.currentState = States.DIRTY;\n\n        switch (this.cronFormat) {\n          case 'quartz':\n            switch (this.activeTab) {\n              case 'minutes':\n                this.ngModel = \"\".concat(this.state.minutes.seconds, \" 0/\").concat(this.state.minutes.minutes, \" * 1/1 * ? *\");\n                break;\n\n              case 'hourly':\n                this.ngModel = \"\".concat(this.state.hourly.seconds, \" \").concat(this.state.hourly.minutes, \" 0/\").concat(this.state.hourly.hours, \" 1/1 * ? *\");\n                break;\n\n              case 'daily':\n                switch (this.state.daily.subTab) {\n                  case 'everyDays':\n                    this.ngModel = \"\".concat(this.state.daily.everyDays.seconds, \" \").concat(this.state.daily.everyDays.minutes, \" \").concat(this.hourToCron(this.state.daily.everyDays.hours, this.state.daily.everyDays.hourType), \" 1/\").concat(this.state.daily.everyDays.days, \" * ? *\");\n                    break;\n\n                  case 'everyWeekDay':\n                    this.ngModel = \"\".concat(this.state.daily.everyWeekDay.seconds, \" \").concat(this.state.daily.everyWeekDay.minutes, \" \").concat(this.hourToCron(this.state.daily.everyWeekDay.hours, this.state.daily.everyWeekDay.hourType), \" ? * MON-FRI *\");\n                    break;\n\n                  default:\n                    throw 'Invalid cron daily subtab selection';\n                }\n\n                break;\n\n              case 'weekly':\n                var _days = this.selectOptions.days.reduce(function (acc, day) {\n                  return _this3.state.weekly[day] ? acc.concat([day]) : acc;\n                }, []).join(',');\n\n                this.ngModel = \"\".concat(this.state.weekly.seconds, \" \").concat(this.state.weekly.minutes, \" \").concat(this.hourToCron(this.state.weekly.hours, this.state.weekly.hourType), \" ? * \").concat(_days, \" *\");\n                break;\n\n              case 'monthly':\n                switch (this.state.monthly.subTab) {\n                  case 'specificDay':\n                    this.ngModel = \"\".concat(this.state.monthly.specificDay.seconds, \" \").concat(this.state.monthly.specificDay.minutes, \" \").concat(this.hourToCron(this.state.monthly.specificDay.hours, this.state.monthly.specificDay.hourType), \" \").concat(this.state.monthly.specificDay.day, \" 1/\").concat(this.state.monthly.specificDay.months, \" ? *\");\n                    break;\n\n                  case 'specificWeekDay':\n                    this.ngModel = \"\".concat(this.state.monthly.specificWeekDay.seconds, \" \").concat(this.state.monthly.specificWeekDay.minutes, \" \").concat(this.hourToCron(this.state.monthly.specificWeekDay.hours, this.state.monthly.specificWeekDay.hourType), \" ? 1/\").concat(this.state.monthly.specificWeekDay.months, \" \").concat(this.state.monthly.specificWeekDay.day).concat(this.state.monthly.specificWeekDay.monthWeek, \" *\");\n                    break;\n\n                  default:\n                    throw 'Invalid cron monthly subtab selection';\n                }\n\n                break;\n\n              case 'yearly':\n                switch (this.state.yearly.subTab) {\n                  case 'specificMonthDay':\n                    this.ngModel = \"\".concat(this.state.yearly.specificMonthDay.seconds, \" \").concat(this.state.yearly.specificMonthDay.minutes, \" \").concat(this.hourToCron(this.state.yearly.specificMonthDay.hours, this.state.yearly.specificMonthDay.hourType), \" \").concat(this.state.yearly.specificMonthDay.day, \" \").concat(this.state.yearly.specificMonthDay.month, \" ? *\");\n                    break;\n\n                  case 'specificMonthWeek':\n                    this.ngModel = \"\".concat(this.state.yearly.specificMonthWeek.seconds, \" \").concat(this.state.yearly.specificMonthWeek.minutes, \" \").concat(this.hourToCron(this.state.yearly.specificMonthWeek.hours, this.state.yearly.specificMonthWeek.hourType), \" ? \").concat(this.state.yearly.specificMonthWeek.month, \" \").concat(this.state.yearly.specificMonthWeek.day).concat(this.state.yearly.specificMonthWeek.monthWeek, \" *\");\n                    break;\n\n                  default:\n                    throw 'Invalid cron yearly subtab selection';\n                }\n\n                break;\n\n              case 'advanced':\n                this.ngModel = this.state.advanced.expression;\n                break;\n\n              default:\n                throw 'Invalid cron active tab selection';\n            }\n\n          case 'unix':\n          case 'daily':\n            switch (this.state.daily.subTab) {\n              case 'everyDays':\n                this.ngModel = \"\".concat(this.state.daily.everyDays.minutes, \" \").concat(this.hourToCron(this.state.daily.everyDays.hours, this.state.daily.everyDays.hourType), \" */\").concat(this.state.daily.everyDays.days, \" * *\");\n                break;\n\n              case 'everyWeekDay':\n                this.ngModel = \"\".concat(this.state.daily.everyWeekDay.minutes, \" \").concat(this.hourToCron(this.state.daily.everyWeekDay.hours, this.state.daily.everyWeekDay.hourType), \" * * 1-5\");\n                break;\n\n              default:\n                throw 'Invalid cron daily subtab selection';\n            }\n\n            break;\n\n          case 'weekly':\n            var days = this.selectOptions.days.reduce(function (acc, day) {\n              return _this3.state.weekly[day] ? acc.concat([day]) : acc;\n            }, []).join(',');\n            this.ngModel = \"\".concat(this.state.weekly.minutes, \" \").concat(this.hourToCron(this.state.weekly.hours, this.state.weekly.hourType), \" ? * \").concat(days);\n            break;\n\n          case 'monthly':\n            switch (this.state.monthly.subTab) {\n              case 'specificDay':\n                this.ngModel = \"\".concat(this.state.monthly.specificDay.minutes, \" \").concat(this.hourToCron(this.state.monthly.specificDay.hours, this.state.monthly.specificDay.hourType), \" \").concat(this.state.monthly.specificDay.day, \" */\").concat(this.state.monthly.specificDay.months, \" *\");\n                break;\n\n              default:\n                throw 'Invalid cron monthly subtab selection';\n            }\n\n            break;\n\n          case 'yearly':\n            switch (this.state.yearly.subTab) {\n              case 'specificMonthDay':\n                this.ngModel = \"\".concat(this.state.yearly.specificMonthDay.minutes, \" \").concat(this.hourToCron(this.state.yearly.specificMonthDay.hours, this.state.yearly.specificMonthDay.hourType), \" \").concat(this.state.yearly.specificMonthDay.day, \" \").concat(this.state.yearly.specificMonthDay.month, \" *\");\n                break;\n\n              default:\n                throw 'Invalid cron yearly subtab selection';\n            }\n\n            break;\n\n          case 'advanced':\n            this.ngModel = this.state.advanced.expression;\n            break;\n\n          default:\n            throw 'Invalid cron active tab selection';\n        }\n      }\n    }, {\n      key: \"handleModelChange\",\n      value: function handleModelChange(cron) {\n        var _this4 = this;\n\n        if (this.currentState === States.DIRTY) {\n          this.currentState = States.CLEAN;\n          return;\n        } else {\n          this.currentState = States.CLEAN;\n        }\n\n        if (!cron) {\n          return;\n        }\n\n        var segments = cron.split(' ');\n\n        if (this.cronFormat === 'quartz' && (segments.length === 6 || segments.length === 7)) {\n          var _segments = _slicedToArray(segments, 6),\n              seconds = _segments[0],\n              minutes = _segments[1],\n              hours = _segments[2],\n              dayOfMonth = _segments[3],\n              month = _segments[4],\n              dayOfWeek = _segments[5];\n\n          if (cron.match(/\\d+ 0\\/\\d+ \\* 1\\/1 \\* \\? \\*/)) {\n            this.activeTab = 'minutes';\n            this.state.minutes.minutes = parseInt(minutes.substring(2));\n            this.state.minutes.seconds = parseInt(seconds);\n          } else if (cron.match(/\\d+ \\d+ 0\\/\\d+ 1\\/1 \\* \\? \\*/)) {\n            this.activeTab = 'hourly';\n            this.state.hourly.hours = parseInt(hours.substring(2));\n            this.state.hourly.minutes = parseInt(minutes);\n            this.state.hourly.seconds = parseInt(seconds);\n          } else if (cron.match(/\\d+ \\d+ \\d+ 1\\/\\d+ \\* \\? \\*/)) {\n            this.activeTab = 'daily';\n            this.state.daily.subTab = 'everyDays';\n            this.state.daily.everyDays.days = parseInt(dayOfMonth.substring(2));\n            var parsedHours = parseInt(hours);\n            this.state.daily.everyDays.hours = this.processHour(parsedHours);\n            this.state.daily.everyDays.hourType = this.getHourType(parsedHours);\n            this.state.daily.everyDays.minutes = parseInt(minutes);\n            this.state.daily.everyDays.seconds = parseInt(seconds);\n          } else if (cron.match(/\\d+ \\d+ \\d+ \\? \\* MON-FRI \\*/)) {\n            this.activeTab = 'daily';\n            this.state.daily.subTab = 'everyWeekDay';\n\n            var _parsedHours = parseInt(hours);\n\n            this.state.daily.everyWeekDay.hours = this.processHour(_parsedHours);\n            this.state.daily.everyWeekDay.hourType = this.getHourType(_parsedHours);\n            this.state.daily.everyWeekDay.minutes = parseInt(minutes);\n            this.state.daily.everyWeekDay.seconds = parseInt(seconds);\n          } else if (cron.match(/\\d+ \\d+ \\d+ \\? \\* (MON|TUE|WED|THU|FRI|SAT|SUN)(,(MON|TUE|WED|THU|FRI|SAT|SUN))* \\*/)) {\n            this.activeTab = 'weekly';\n            this.selectOptions.days.forEach(function (weekDay) {\n              return _this4.state.weekly[weekDay] = false;\n            });\n            dayOfWeek.split(',').forEach(function (weekDay) {\n              return _this4.state.weekly[weekDay] = true;\n            });\n\n            var _parsedHours2 = parseInt(hours);\n\n            this.state.weekly.hours = this.processHour(_parsedHours2);\n            this.state.weekly.hourType = this.getHourType(_parsedHours2);\n            this.state.weekly.minutes = parseInt(minutes);\n            this.state.weekly.seconds = parseInt(seconds);\n          } else if (cron.match(/\\d+ \\d+ \\d+ (\\d+|L|LW|1W) 1\\/\\d+ \\? \\*/)) {\n            this.activeTab = 'monthly';\n            this.state.monthly.subTab = 'specificDay';\n            this.state.monthly.specificDay.day = dayOfMonth;\n            this.state.monthly.specificDay.months = parseInt(month.substring(2));\n\n            var _parsedHours3 = parseInt(hours);\n\n            this.state.monthly.specificDay.hours = this.processHour(_parsedHours3);\n            this.state.monthly.specificDay.hourType = this.getHourType(_parsedHours3);\n            this.state.monthly.specificDay.minutes = parseInt(minutes);\n            this.state.monthly.specificDay.seconds = parseInt(seconds);\n          } else if (cron.match(/\\d+ \\d+ \\d+ \\? 1\\/\\d+ (MON|TUE|WED|THU|FRI|SAT|SUN)((#[1-5])|L) \\*/)) {\n            var day = dayOfWeek.substr(0, 3);\n            var monthWeek = dayOfWeek.substr(3);\n            this.activeTab = 'monthly';\n            this.state.monthly.subTab = 'specificWeekDay';\n            this.state.monthly.specificWeekDay.monthWeek = monthWeek;\n            this.state.monthly.specificWeekDay.day = day;\n            this.state.monthly.specificWeekDay.months = parseInt(month.substring(2));\n\n            var _parsedHours4 = parseInt(hours);\n\n            this.state.monthly.specificWeekDay.hours = this.processHour(_parsedHours4);\n            this.state.monthly.specificWeekDay.hourType = this.getHourType(_parsedHours4);\n            this.state.monthly.specificWeekDay.minutes = parseInt(minutes);\n            this.state.monthly.specificWeekDay.seconds = parseInt(seconds);\n          } else if (cron.match(/\\d+ \\d+ \\d+ (\\d+|L|LW|1W) \\d+ \\? \\*/)) {\n            this.activeTab = 'yearly';\n            this.state.yearly.subTab = 'specificMonthDay';\n            this.state.yearly.specificMonthDay.month = parseInt(month);\n            this.state.yearly.specificMonthDay.day = dayOfMonth;\n\n            var _parsedHours5 = parseInt(hours);\n\n            this.state.yearly.specificMonthDay.hours = this.processHour(_parsedHours5);\n            this.state.yearly.specificMonthDay.hourType = this.getHourType(_parsedHours5);\n            this.state.yearly.specificMonthDay.minutes = parseInt(minutes);\n            this.state.yearly.specificMonthDay.seconds = parseInt(seconds);\n          } else if (cron.match(/\\d+ \\d+ \\d+ \\? \\d+ (MON|TUE|WED|THU|FRI|SAT|SUN)((#[1-5])|L) \\*/)) {\n            var _day = dayOfWeek.substr(0, 3);\n\n            var _monthWeek = dayOfWeek.substr(3);\n\n            this.activeTab = 'yearly';\n            this.state.yearly.subTab = 'specificMonthWeek';\n            this.state.yearly.specificMonthWeek.monthWeek = _monthWeek;\n            this.state.yearly.specificMonthWeek.day = _day;\n            this.state.yearly.specificMonthWeek.month = parseInt(month);\n\n            var _parsedHours6 = parseInt(hours);\n\n            this.state.yearly.specificMonthWeek.hours = this.processHour(_parsedHours6);\n            this.state.yearly.specificMonthWeek.hourType = this.getHourType(_parsedHours6);\n            this.state.yearly.specificMonthWeek.minutes = parseInt(minutes);\n            this.state.yearly.specificMonthWeek.seconds = parseInt(seconds);\n          } else {\n            this.activeTab = 'advanced';\n            this.state.advanced.expression = cron;\n          }\n        } else if (this.cronFormat === 'unix' && segments.length === 5) {\n          var _segments2 = _slicedToArray(segments, 5),\n              _minutes = _segments2[0],\n              _hours = _segments2[1],\n              _dayOfMonth = _segments2[2],\n              _month = _segments2[3],\n              _dayOfWeek = _segments2[4];\n\n          if (cron.match(/\\d+ \\d+ 1\\/\\d+ \\* \\*/)) {\n            this.activeTab = 'daily';\n            this.state.daily.subTab = 'everyDays';\n            this.state.daily.everyDays.days = parseInt(_dayOfMonth.substring(2));\n\n            var _parsedHours7 = parseInt(_hours);\n\n            this.state.daily.everyDays.hours = this.processHour(_parsedHours7);\n            this.state.daily.everyDays.hourType = this.getHourType(_parsedHours7);\n            this.state.daily.everyDays.minutes = parseInt(_minutes);\n            this.state.daily.everyDays.seconds = 0;\n          } else if (cron.match(/\\d+ \\d+ \\* \\* MON-FRI/)) {\n            this.activeTab = 'daily';\n            this.state.daily.subTab = 'everyWeekDay';\n\n            var _parsedHours8 = parseInt(_hours);\n\n            this.state.daily.everyWeekDay.hours = this.processHour(_parsedHours8);\n            this.state.daily.everyWeekDay.hourType = this.getHourType(_parsedHours8);\n            this.state.daily.everyWeekDay.minutes = parseInt(_minutes);\n            this.state.daily.everyWeekDay.seconds = 0;\n          } else if (cron.match(/\\d+ \\d+ \\* \\* (MON|TUE|WED|THU|FRI|SAT|SUN)(,(MON|TUE|WED|THU|FRI|SAT|SUN))*/)) {\n            this.activeTab = 'weekly';\n            this.selectOptions.days.forEach(function (weekDay) {\n              return _this4.state.weekly[weekDay] = false;\n            });\n\n            _dayOfWeek.split(',').forEach(function (weekDay) {\n              return _this4.state.weekly[weekDay] = true;\n            });\n\n            var _parsedHours9 = parseInt(_hours);\n\n            this.state.weekly.hours = this.processHour(_parsedHours9);\n            this.state.weekly.hourType = this.getHourType(_parsedHours9);\n            this.state.weekly.minutes = parseInt(_minutes);\n            this.state.weekly.seconds = 0;\n          } else if (cron.match(/\\d+ \\d+ \\d+ 1\\/\\d+ \\*/)) {\n            this.activeTab = 'monthly';\n            this.state.monthly.subTab = 'specificDay';\n            this.state.monthly.specificDay.day = _dayOfMonth;\n            this.state.monthly.specificDay.months = parseInt(_month.substring(2));\n\n            var _parsedHours10 = parseInt(_hours);\n\n            this.state.monthly.specificDay.hours = this.processHour(_parsedHours10);\n            this.state.monthly.specificDay.hourType = this.getHourType(_parsedHours10);\n            this.state.monthly.specificDay.minutes = parseInt(_minutes);\n            this.state.monthly.specificDay.seconds = 0;\n          } else if (cron.match(/\\d+ \\d+ \\d+ \\d+ \\*/)) {\n            this.activeTab = 'yearly';\n            this.state.yearly.subTab = 'specificMonthDay';\n            this.state.yearly.specificMonthDay.month = parseInt(_month);\n            this.state.yearly.specificMonthDay.day = _dayOfMonth;\n\n            var _parsedHours11 = parseInt(_hours);\n\n            this.state.yearly.specificMonthDay.hours = this.processHour(_parsedHours11);\n            this.state.yearly.specificMonthDay.hourType = this.getHourType(_parsedHours11);\n            this.state.yearly.specificMonthDay.minutes = parseInt(_minutes);\n            this.state.yearly.specificMonthDay.seconds = 0;\n          } else {\n            this.activeTab = 'advanced';\n            this.state.advanced.expression = cron;\n          }\n        } else {\n          throw 'Unsupported cron expression. Expression must be 6 or 7 segments';\n        }\n      }\n    }]);\n\n    return CronGenComponent;\n  }();\n\n  var QUARTZ_REGEX = /^\\s*($|#|\\w+\\s*=|(\\?|\\*|(?:[0-5]?\\d)(?:(?:-|\\/|\\,)(?:[0-5]?\\d))?(?:,(?:[0-5]?\\d)(?:(?:-|\\/|\\,)(?:[0-5]?\\d))?)*)\\s+(\\?|\\*|(?:[0-5]?\\d)(?:(?:-|\\/|\\,)(?:[0-5]?\\d))?(?:,(?:[0-5]?\\d)(?:(?:-|\\/|\\,)(?:[0-5]?\\d))?)*)\\s+(\\?|\\*|(?:[01]?\\d|2[0-3])(?:(?:-|\\/|\\,)(?:[01]?\\d|2[0-3]))?(?:,(?:[01]?\\d|2[0-3])(?:(?:-|\\/|\\,)(?:[01]?\\d|2[0-3]))?)*)\\s+(\\?|\\*|(?:0?[1-9]|[12]\\d|3[01])(?:(?:-|\\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?(?:,(?:0?[1-9]|[12]\\d|3[01])(?:(?:-|\\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?)*)\\s+(\\?|\\*|(?:[1-9]|1[012])(?:(?:-|\\/|\\,)(?:[1-9]|1[012]))?(?:L|W)?(?:,(?:[1-9]|1[012])(?:(?:-|\\/|\\,)(?:[1-9]|1[012]))?(?:L|W)?)*|\\?|\\*|(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?(?:,(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?)*)\\s+(\\?|\\*|(?:[1-7]|MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-|\\/|\\,|#)(?:[1-5]))?(?:L)?(?:,(?:[1-7]|MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-|\\/|\\,|#)(?:[1-5]))?(?:L)?)*|\\?|\\*|(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?(?:,(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?)*)(|\\s)+(\\?|\\*|(?:|\\d{4})(?:(?:-|\\/|\\,)(?:|\\d{4}))?(?:,(?:|\\d{4})(?:(?:-|\\/|\\,)(?:|\\d{4}))?)*))$/;\n  var CronGenService = /*#__PURE__*/function () {\n    function CronGenService($filter) {\n      _classCallCheck(this, CronGenService);\n\n      this.filter = $filter;\n    }\n\n    _createClass(CronGenService, [{\n      key: \"isValid\",\n      value: function isValid(cronFormat, expression) {\n        if (!expression) {\n          return false;\n        }\n\n        var formattedExpression = expression.toUpperCase();\n\n        switch (cronFormat) {\n          case 'quartz':\n            return !!formattedExpression.match(QUARTZ_REGEX);\n\n          case 'unix':\n            return true;\n\n          default:\n            throw \"Desired cron format (\".concat(cronFormat, \") is not available\");\n        }\n      }\n    }, {\n      key: \"appendInt\",\n      value: function appendInt(number) {\n        var value = \"\".concat(number);\n\n        if (value.length > 1) {\n          var secondToLastDigit = value.charAt(value.length - 2);\n\n          if (secondToLastDigit === '1') {\n            return this.filter('translate')('CARDINAL_PREFIX');\n          }\n        }\n\n        var lastDigit = value.charAt(value.length - 1);\n\n        switch (lastDigit) {\n          case '1':\n            return this.filter('translate')('FIRST_PREFIX');\n\n          case '2':\n            return this.filter('translate')('SECOND_PREFIX');\n\n          case '3':\n            return this.filter('translate')('THIRD_PREFIX');\n\n          default:\n            return this.filter('translate')('CARDINAL_PREFIX');\n        }\n      }\n    }, {\n      key: \"padNumber\",\n      value: function padNumber(number) {\n        return \"\".concat(number).length === 1 ? \"0\".concat(number) : \"\".concat(number);\n      }\n    }, {\n      key: \"range\",\n      value: function range(start, end) {\n        if (typeof end === 'undefined') {\n          end = start;\n          start = 0;\n        }\n\n        if (start < 0 || end < 0) throw 'Range values must be positive values';\n\n        if (end > start) {\n          return _toConsumableArray(new Array(end - start)).map(function (val, idx) {\n            return idx + start;\n          });\n        } else if (start < end) {\n          return _toConsumableArray(new Array(start - end)).map(function (val, idx) {\n            return end - idx;\n          });\n        } else {\n          return [];\n        }\n      }\n    }, {\n      key: \"selectOptions\",\n      value: function selectOptions() {\n        return {\n          months: this.range(1, 13),\n          monthWeeks: ['#1', '#2', '#3', '#4', '#5', 'L'],\n          days: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'],\n          minutes: this.range(1, 60),\n          fullMinutes: this.range(60),\n          seconds: this.range(60),\n          hours: this.range(1, 24),\n          monthDays: this.range(1, 32),\n          monthDaysWithLasts: _toConsumableArray(_toConsumableArray(new Array(31)).map(function (val, idx) {\n            return \"\".concat(idx + 1);\n          }))\n        };\n      }\n    }]);\n\n    return CronGenService;\n  }();\n\n  var CronGenTimeSelect = function CronGenTimeSelect($scope, cronGenService) {\n    'ngInject';\n\n    var _this = this;\n\n    _classCallCheck(this, CronGenTimeSelect);\n\n    this.cronGenService = cronGenService;\n    this.selectOptions = {\n      minutes: cronGenService.range(60),\n      seconds: cronGenService.range(60),\n      hourTypes: ['AM', 'PM']\n    };\n    $scope.$watch('$ctrl.use24HourTime', function () {\n      _this.selectOptions.hours = _this.use24HourTime ? _this.cronGenService.range(24) : _this.cronGenService.range(1, 13);\n    });\n  };\n\n  angular.module('angular-cron-gen', ['pascalprecht.translate']).config(function ($translateProvider) {\n    $translateProvider.translations('en', {\n      'MINUTES': 'Minutes',\n      'HOURLY': 'Hourly',\n      'DAILY': 'Daily',\n      'WEEKLY': 'Weekly',\n      'MONTHLY': 'Monthly',\n      'YEARLY': 'Yearly',\n      'ADVANCED': 'Advanced',\n      'EVERY': 'Every',\n      'EVERY_MONTH': 'Every',\n      'MINUTE': 'minute(s)',\n      'ON_SECOND': 'on second',\n      'HOUR_ON_MINUTE': 'hour(s) on minute',\n      'AND_SECOND': 'and second',\n      'DAY_AT': 'day(s) at',\n      'EVERY_WEEK_WORKING_DAY': 'Every week day (Monday through Friday) at',\n      'MONDAY': 'Monday',\n      'TUESDAY': 'Tuesday',\n      'WEDNESDAY': 'Wednesday',\n      'THURSDAY': 'Thursday',\n      'FRIDAY': 'Friday',\n      'SATURDAY': 'Saturday',\n      'SUNDAY': 'Sunday',\n      'START_TIME': 'Start time',\n      'ON_THE': 'On the',\n      'ON_THE_SMALL': 'on the',\n      'OF_EVERY': 'of every',\n      'MONTHS_AT': 'month(s) at',\n      'AT': 'at',\n      'OF': 'of',\n      'CRON_EXPRESSION': 'Cron Expression',\n      'MORE_DETAILS': 'More details about how to create these expressions can be found',\n      'HERE': 'here',\n      'LAST_DAY': 'Last day',\n      'LAST_WEEKDAY': 'Last Weekday',\n      'FIRST_WEEKDAY': 'First Weekday',\n      'DAY': 'Day',\n      'FIRST_PREFIX': 'st',\n      'SECOND_PREFIX': 'nd',\n      'THIRD_PREFIX': 'rd',\n      'CARDINAL_PREFIX': 'th',\n      'FIRST': 'First',\n      'SECOND': 'Second',\n      'THIRD': 'Third',\n      'FOURTH': 'Fourth',\n      'FIFTH': 'Fifth',\n      'LAST': 'Last',\n      'JANUARY': 'January',\n      'FEBRUARY': 'February',\n      'MARCH': 'March',\n      'APRIL': 'April',\n      'MAY': 'May',\n      'JUNE': 'June',\n      'JULY': 'July',\n      'AUGUST': 'August',\n      'SEPTEMBER': 'September',\n      'OCTOBER': 'October',\n      'NOVEMBER': 'November',\n      'DECEMBER': 'December'\n    }).translations('it', {\n      'MINUTES': 'Minuti',\n      'HOURLY': 'Orario',\n      'DAILY': 'Giornaliero',\n      'WEEKLY': 'Settimanale',\n      'MONTHLY': 'Mensile',\n      'YEARLY': 'Annuale',\n      'ADVANCED': 'Avanzato',\n      'EVERY': 'Ogni',\n      'EVERY_MONTH': 'Ogni',\n      'MINUTE': 'minuto/i',\n      'ON_SECOND': 'al secondo',\n      'HOUR_ON_MINUTE': 'ora/e al minuto',\n      'AND_SECOND': 'e secondi',\n      'DAY_AT': 'giorno/i alle',\n      'EVERY_WEEK_WORKING_DAY': \"Ogni giorno della settimana (dal Lunedi' al Venerdi') alle\",\n      'MONDAY': \"Lunedi'\",\n      'TUESDAY': \"Martedi'\",\n      'WEDNESDAY': \"Mercoledi'\",\n      'THURSDAY': \"Giovedi'\",\n      'FRIDAY': \"Venerdi'\",\n      'SATURDAY': 'Sabato',\n      'SUNDAY': 'Domenica',\n      'START_TIME': 'Inizio alle',\n      'ON_THE': 'Il',\n      'ON_THE_SMALL': 'il',\n      'OF_EVERY': 'di ogni',\n      'MONTHS_AT': 'mese/i il',\n      'AT': 'il',\n      'OF': 'di',\n      'CRON_EXPRESSION': 'Sintassi Cron',\n      'MORE_DETAILS': 'Maggiori informazioni sulla sintassi Cron li potete trovare',\n      'HERE': 'qui',\n      'LAST_DAY': 'Ultimo giorno',\n      'LAST_WEEKDAY': 'Fine settimana',\n      'FIRST_WEEKDAY': 'Inizio settimana',\n      'DAY': 'Giorno',\n      'FIRST_PREFIX': '',\n      'SECOND_PREFIX': '',\n      'THIRD_PREFIX': '',\n      'CARDINAL_PREFIX': '',\n      'FIRST': 'Primo',\n      'SECOND': 'Secondo',\n      'THIRD': 'Terzo',\n      'FOURTH': 'Quarto',\n      'FIFTH': 'Quinto',\n      'LAST': 'Ultimo',\n      'JANUARY': 'Gennaio',\n      'FEBRUARY': 'Febbraio',\n      'MARCH': 'Marzo',\n      'APRIL': 'Aprile',\n      'MAY': 'Maggio',\n      'JUNE': 'Giugno',\n      'JULY': 'Luglio',\n      'AUGUST': 'Agosto',\n      'SEPTEMBER': 'Settembre',\n      'OCTOBER': 'Ottobre',\n      'NOVEMBER': 'Novembre',\n      'DECEMBER': 'Dicembre'\n    }).translations('de', {\n      'MINUTES': 'Minütlich',\n      'HOURLY': 'Stündlich',\n      'DAILY': 'Täglich',\n      'WEEKLY': 'Wöchentlich',\n      'MONTHLY': 'Monatlich',\n      'YEARLY': 'Jährlich',\n      'ADVANCED': 'Cron Ausdruck',\n      'EVERY': 'Alle',\n      'EVERY_MONTH': 'Jeden',\n      'MINUTE': 'Minute(n)',\n      'ON_SECOND': 'auf Sekunde',\n      'HOUR_ON_MINUTE': 'Stunde(n) auf Minute',\n      'AND_SECOND': 'und Sekunde',\n      'DAY_AT': 'Tag(e) um',\n      'EVERY_WEEK_WORKING_DAY': \"Jeden Wochentag (Montag bis Freitag) um\",\n      'MONDAY': \"Montag\",\n      'TUESDAY': \"Dienstag\",\n      'WEDNESDAY': \"Mittwoch\",\n      'THURSDAY': \"Donnerstag\",\n      'FRIDAY': \"Freitag\",\n      'SATURDAY': 'Samstag',\n      'SUNDAY': 'Sonntag',\n      'START_TIME': 'Startzeit',\n      'ON_THE': 'Am',\n      'ON_THE_SMALL': 'am',\n      'OF_EVERY': 'alle',\n      'MONTHS_AT': 'Monat(e) um',\n      'AT': 'um',\n      'OF': 'im',\n      'CRON_EXPRESSION': 'Cron Ausdruck',\n      'MORE_DETAILS': 'Weitere Informationen zum Erstellen dieser Ausdrücke finden Sie ',\n      'HERE': 'hier',\n      'LAST_DAY': 'letzter Tag',\n      'LAST_WEEKDAY': 'letzter Wochentag',\n      'FIRST_WEEKDAY': 'erster Wochentag',\n      'DAY': 'Tag',\n      'FIRST_PREFIX': '',\n      'SECOND_PREFIX': '',\n      'THIRD_PREFIX': '',\n      'CARDINAL_PREFIX': '',\n      'FIRST': 'Ersten',\n      'SECOND': 'Zweiten',\n      'THIRD': 'Dritten',\n      'FOURTH': 'Vierten',\n      'FIFTH': 'Fünften',\n      'LAST': 'Letzten',\n      'JANUARY': 'Januar',\n      'FEBRUARY': 'Februar',\n      'MARCH': 'März',\n      'APRIL': 'April',\n      'MAY': 'Mai',\n      'JUNE': 'Juni',\n      'JULY': 'Juli',\n      'AUGUST': 'August',\n      'SEPTEMBER': 'September',\n      'OCTOBER': 'Oktober',\n      'NOVEMBER': 'November',\n      'DECEMBER': 'Dezember'\n    }).translations('fr', {\n      'MINUTES': 'Minutes',\n      'HOURLY': 'Heures',\n      'DAILY': 'Jours',\n      'WEEKLY': 'Semaines',\n      'MONTHLY': 'Mois',\n      'YEARLY': 'Années',\n      'ADVANCED': 'Avancée',\n      'EVERY': 'Chaque',\n      'EVERY_MONTH': 'Chaque',\n      'MINUTE': 'minute(s)',\n      'ON_SECOND': 'à la seconde',\n      'HOUR_ON_MINUTE': 'heure(s) à la minute',\n      'AND_SECOND': 'et seconde',\n      'DAY_AT': 'jours(s) à',\n      'EVERY_WEEK_WORKING_DAY': 'Chaque jour de semaine à',\n      'MONDAY': 'Lundi',\n      'TUESDAY': 'Mardi',\n      'WEDNESDAY': 'Mercredi',\n      'THURSDAY': 'Jeudi',\n      'FRIDAY': 'Vendredi',\n      'SATURDAY': 'Samedi',\n      'SUNDAY': 'Dimanche',\n      'START_TIME': 'De',\n      'ON_THE': 'Au',\n      'ON_THE_SMALL': 'au',\n      'OF_EVERY': 'de chaque',\n      'MONTHS_AT': 'mois à',\n      'AT': 'à',\n      'OF': 'de',\n      'CRON_EXPRESSION': 'Expression Cron',\n      'MORE_DETAILS': 'Plus de détails sur la génération de ces expressions',\n      'HERE': 'ici',\n      'LAST_DAY': 'Dernier jour',\n      'LAST_WEEKDAY': 'Dernier jour de la semaine',\n      'FIRST_WEEKDAY': 'Premier jour de la semaine',\n      'DAY': 'Jour',\n      'FIRST_PREFIX': 'er',\n      'SECOND_PREFIX': 'nd',\n      'THIRD_PREFIX': 'eme',\n      'CARDINAL_PREFIX': 'eme',\n      'FIRST': 'Premier',\n      'SECOND': 'Second',\n      'THIRD': 'Troisième',\n      'FOURTH': 'Quatrième',\n      'FIFTH': 'Cinquième',\n      'LAST': 'Dernier',\n      'JANUARY': 'Janvier',\n      'FEBRUARY': 'Février',\n      'MARCH': 'Mars',\n      'APRIL': 'Avril',\n      'MAY': 'Mai',\n      'JUNE': 'Juin',\n      'JULY': 'Juillet',\n      'AUGUST': 'Août',\n      'SEPTEMBER': 'Septembre',\n      'OCTOBER': 'Octobre',\n      'NOVEMBER': 'Novembre',\n      'DECEMBER': 'Décembre'\n    });\n  }).service('cronGenService', CronGenService).component('cronGenTimeSelect', {\n    bindings: {\n      isDisabled: '<',\n      onChange: '&',\n      isRequired: '<',\n      model: '=',\n      selectClass: '<',\n      use24HourTime: '<',\n      hideSeconds: '<',\n      namePrefix: '@'\n    },\n    templateUrl: 'angular-cron-gen/cron-gen-time-select.html',\n    controller: CronGenTimeSelect\n  }).component('cronGen', {\n    bindings: {\n      ngModel: '=',\n      ngDisabled: '<',\n      options: '<',\n      cronFormat: '@',\n      templateUrl: '@',\n      name: '@'\n    },\n    require: {\n      ngModelCtrl: 'ngModel',\n      ngDisabledCtrl: '?ngDisabled',\n      formCtrl: '^?form'\n    },\n    templateUrl: function templateUrl($attrs) {\n      'ngInject';\n\n      return $attrs.templateUrl || 'angular-cron-gen/cron-gen.html';\n    },\n    controller: CronGenComponent\n  });\n\n}());\n","angular.module('angular-cron-gen').run(['$templateCache', function($templateCache) {$templateCache.put('angular-cron-gen/cron-gen-time-select.html','<div class=\"inline-block\">\\n    <select class=\"hours\"\\n            name=\"{{namePrefix}}Hours\"\\n            ng-disabled=\"$ctrl.isDisabled\"\\n            ng-change=\"$ctrl.onChange()\"\\n            ng-required=\"$ctrl.isRequired\"\\n            ng-model=\"$ctrl.model.hours\"\\n            ng-options=\"hour as $ctrl.cronGenService.padNumber(hour) for hour in $ctrl.selectOptions.hours\"\\n            ng-class=\"$ctrl.selectClass\">\\n    </select>\\n    <select class=\"minutes\"\\n            name=\"{{namePrefix}}Minutes\"\\n            ng-disabled=\"$ctrl.isDisabled\"\\n            ng-change=\"$ctrl.onChange()\"\\n            ng-required=\"$ctrl.isRequired\"\\n            ng-model=\"$ctrl.model.minutes\"\\n            ng-options=\"minute as $ctrl.cronGenService.padNumber(minute) for minute in $ctrl.selectOptions.minutes\"\\n            ng-class=\"$ctrl.selectClass\">\\n    </select>\\n    <select class=\"seconds\"\\n            name=\"{{namePrefix}}Seconds\"\\n            ng-show=\"!$ctrl.hideSeconds\"\\n            ng-disabled=\"$ctrl.isDisabled\"\\n            ng-change=\"$ctrl.onChange()\"\\n            ng-required=\"$ctrl.isRequired\"\\n            ng-model=\"$ctrl.model.seconds\"\\n            ng-options=\"second as $ctrl.cronGenService.padNumber(second) for second in $ctrl.selectOptions.seconds\"\\n            ng-class=\"$ctrl.selectClass\">\\n    </select>\\n    <select class=\"hour-types\"\\n            name=\"{{namePrefix}}HourType\"\\n            ng-if=\"!$ctrl.use24HourTime\"\\n            ng-disabled=\"$ctrl.isDisabled\"\\n            ng-change=\"$ctrl.onChange()\"\\n            ng-model=\"$ctrl.model.hourType\"\\n            ng-options=\"hourType as hourType for hourType in $ctrl.selectOptions.hourTypes\"\\n            ng-required=\"$ctrl.isRequired\"\\n            ng-class=\"$ctrl.selectClass\">\\n    </select>\\n</div>');\n$templateCache.put('angular-cron-gen/cron-gen.html','<!doctype html>\\n<div class=\"cron-gen-main\" ng-cloak>\\n    <ul class=\"nav nav-tabs tab-nav\" role=\"tablist\">\\n        <li ng-class=\"{\\'active\\': $ctrl.activeTab === \\'minutes\\'}\"\\n            ng-show=\"!$ctrl.parsedOptions.hideMinutesTab\"\\n            role=\"presentation\">\\n            <a href=\"#\"\\n               aria-controls=\"minutes\"\\n               role=\"tab\"\\n               data-toggle=\"tab\"\\n               ng-click=\"$ctrl.setActiveTab($event, \\'minutes\\')\">\\n                {{ \\'MINUTES\\' | translate }}\\n            </a>\\n        </li>\\n        <li role=\"presentation\"\\n            ng-show=\"!$ctrl.parsedOptions.hideHourlyTab\"\\n            ng-class=\"{\\'active\\': $ctrl.activeTab === \\'hourly\\'}\">\\n            <a href=\"#\"\\n               aria-controls=\"hourly\"\\n               role=\"tab\"\\n               data-toggle=\"tab\"\\n               ng-click=\"$ctrl.setActiveTab($event, \\'hourly\\')\">\\n                {{ \\'HOURLY\\' | translate }}\\n            </a>\\n        </li>\\n        <li role=\"presentation\"\\n            ng-show=\"!$ctrl.parsedOptions.hideDailyTab\"\\n            ng-class=\"{\\'active\\': $ctrl.activeTab === \\'daily\\'}\">\\n            <a href=\"#\"\\n               aria-controls=\"daily\"\\n               role=\"tab\"\\n               data-toggle=\"tab\"\\n               ng-click=\"$ctrl.setActiveTab($event, \\'daily\\')\">\\n                {{ \\'DAILY\\' | translate }}\\n            </a>\\n        </li>\\n        <li role=\"presentation\"\\n            ng-show=\"!$ctrl.parsedOptions.hideWeeklyTab\"\\n            ng-class=\"{\\'active\\': $ctrl.activeTab === \\'weekly\\'}\">\\n            <a href=\"#\" aria-controls=\"weekly\"\\n               role=\"tab\"\\n               data-toggle=\"tab\"\\n               ng-click=\"$ctrl.setActiveTab($event, \\'weekly\\')\">\\n                {{ \\'WEEKLY\\' | translate }}\\n            </a>\\n        </li>\\n        <li role=\"presentation\"\\n            ng-show=\"!$ctrl.parsedOptions.hideMonthlyTab\"\\n            ng-class=\"{\\'active\\': $ctrl.activeTab === \\'monthly\\'}\">\\n            <a href=\"#\"\\n               aria-controls=\"monthly\"\\n               role=\"tab\"\\n               data-toggle=\"tab\"\\n               ng-click=\"$ctrl.setActiveTab($event, \\'monthly\\')\">\\n                {{ \\'MONTHLY\\' | translate }}\\n            </a>\\n        </li>\\n        <li role=\"presentation\"\\n            ng-show=\"!$ctrl.parsedOptions.hideYearlyTab\"\\n            ng-class=\"{\\'active\\': $ctrl.activeTab === \\'yearly\\'}\">\\n            <a href=\"#\"\\n               aria-controls=\"yearly\"\\n               role=\"tab\"\\n               data-toggle=\"tab\"\\n               ng-click=\"$ctrl.setActiveTab($event, \\'yearly\\')\">\\n                {{ \\'YEARLY\\' | translate }}\\n            </a>\\n        </li>\\n        <li role=\"presentation\"\\n            ng-show=\"!$ctrl.parsedOptions.hideAdvancedTab\"\\n            ng-class=\"{\\'active\\': $ctrl.activeTab === \\'advanced\\'}\">\\n            <a href=\"#\"\\n               aria-controls=\"advanced\"\\n               role=\"tab\"\\n               data-toggle=\"tab\"\\n               ng-click=\"$ctrl.setActiveTab($event, \\'advanced\\')\">\\n                {{ \\'ADVANCED\\' | translate}}\\n            </a>\\n        </li>\\n    </ul>\\n    <div class=\"cron-gen-container\">\\n        <div class=\"row\">\\n            <div class=\"col-xs-12\">\\n                <div class=\"tab-content\">\\n                    <div class=\"tab-pane\"\\n                         ng-show=\"!$ctrl.parsedOptions.hideMinutesTab\"\\n                         ng-class=\"{\\'active\\': $ctrl.activeTab === \\'minutes\\'}\">\\n                        <div class=\"well well-small\">\\n                            {{ \\'EVERY\\' | translate}}\\n                            <select class=\"minutes\"\\n                                    name=\"minutesMinutes\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'minutes\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.minutes.minutes\"\\n                                    ng-required=\"$ctrl.activeTab === \\'minutes\\'\"\\n                                    ng-options=\"minute as minute for minute in $ctrl.selectOptions.minutes\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'MINUTE\\' | translate}}\\n                            <span ng-show=\"!$ctrl.parsedOptions.hideSeconds\"> {{ \\'ON_SECOND\\' | translate }} </span>\\n                            <select class=\"seconds\"\\n                                    name=\"minutesSeconds\"\\n                                    ng-show=\"!$ctrl.parsedOptions.hideSeconds\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'minutes\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.minutes.seconds\"\\n                                    ng-required=\"$ctrl.activeTab === \\'minutes\\'\"\\n                                    ng-options=\"second as $ctrl.cronGenService.padNumber(second) for second in $ctrl.selectOptions.seconds\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                        </div>\\n                    </div>\\n                    <div class=\"tab-pane\"\\n                         ng-show=\"!$ctrl.parsedOptions.hideHourlyTab\"\\n                         ng-class=\"{\\'active\\': $ctrl.activeTab === \\'hourly\\'}\">\\n                        <div class=\"well well-small\">\\n                            {{ \\'EVERY\\' | translate}}\\n                            <select class=\"hours\"\\n                                    name=\"hourlyHours\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'hourly\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.hourly.hours\"\\n                                    ng-required=\"$ctrl.activeTab === \\'hourly\\'\"\\n                                    ng-options=\"hour as hour for hour in $ctrl.selectOptions.hours\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'HOUR_ON_MINUTE\\' | translate}}\\n                            <select class=\"minutes\"\\n                                    name=\"hourlyMinutes\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'hourly\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.hourly.minutes\"\\n                                    ng-required=\"$ctrl.activeTab === \\'hourly\\'\"\\n                                    ng-options=\"minute as $ctrl.cronGenService.padNumber(minute) for minute in $ctrl.selectOptions.fullMinutes\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            <span ng-show=\"!$ctrl.parsedOptions.hideSeconds\">{{ \\'AND_SECOND\\' | translate}}</span>\\n                            <select class=\"seconds\"\\n                                    name=\"hourlySeconds\"\\n                                    ng-show=\"!$ctrl.parsedOptions.hideSeconds\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'hourly\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.hourly.seconds\"\\n                                    ng-required=\"$ctrl.activeTab === \\'hourly\\'\"\\n                                    ng-options=\"second as $ctrl.cronGenService.padNumber(second) for second in $ctrl.selectOptions.seconds\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                        </div>\\n                    </div>\\n                    <div class=\"tab-pane\"\\n                         ng-show=\"!$ctrl.parsedOptions.hideDailyTab\"\\n                         ng-class=\"{\\'active\\': $ctrl.activeTab === \\'daily\\'}\">\\n                        <div class=\"well well-small\">\\n                            <input type=\"radio\"\\n                                   value=\"everyDays\"\\n                                   name=\"daily-radio\"\\n                                   ng-disabled=\"$ctrl.ngDisabled\"\\n                                   ng-change=\"$ctrl.regenerateCron()\"\\n                                   ng-model=\"$ctrl.state.daily.subTab\"\\n                                   ng-class=\"$ctrl.state.formRadioClass\"\\n                                   checked=\"checked\">\\n                            {{ \\'EVERY\\' | translate}}\\n                            <select class=\"days\"\\n                                    name=\"dailyEveryDaysDays\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'daily\\' || $ctrl.state.daily.subTab !== \\'everyDays\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.daily.everyDays.days\"\\n                                    ng-required=\"$ctrl.activeTab === \\'daily\\' && $ctrl.state.daily.subTab === \\'everyDays\\'\"\\n                                    ng-options=\"monthDay as monthDay for monthDay in $ctrl.selectOptions.monthDays\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'DAY_AT\\' | translate}}\\n                            <cron-gen-time-select\\n                                    is-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'daily\\' || $ctrl.state.daily.subTab !== \\'everyDays\\'\"\\n                                    on-change=\"$ctrl.regenerateCron()\"\\n                                    name-prefix=\"dailyEveryDays\"\\n                                    is-required=\"$ctrl.activeTab === \\'daily\\' && $ctrl.state.daily.subTab === \\'everyDays\\'\"\\n                                    model=\"$ctrl.state.daily.everyDays\"\\n                                    select-class=\"$ctrl.parsedOptions.formSelectClass\"\\n                                    use-24-hour-time=\"$ctrl.parsedOptions.use24HourTime\"\\n                                    hide-seconds=\"$ctrl.parsedOptions.hideSeconds\">\\n                            </cron-gen-time-select>\\n                        </div>\\n                        <div class=\"well well-small\">\\n                            <input type=\"radio\"\\n                                   value=\"everyWeekDay\"\\n                                   ng-disabled=\"$ctrl.ngDisabled\"\\n                                   ng-change=\"$ctrl.regenerateCron()\"\\n                                   ng-model=\"$ctrl.state.daily.subTab\"\\n                                   ng-class=\"$ctrl.state.formRadioClass\"\\n                                   name=\"daily-radio\">\\n                            {{ \\'EVERY_WEEK_WORKING_DAY\\' | translate}}\\n                            <cron-gen-time-select\\n                                    is-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'daily\\' || $ctrl.state.daily.subTab !== \\'everyWeekDay\\'\"\\n                                    on-change=\"$ctrl.regenerateCron()\"\\n                                    name-prefix=\"dailyEveryWeekDay\"\\n                                    is-required=\"$ctrl.activeTab === \\'daily\\' && $ctrl.state.daily.subTab === \\'everyWeekDay\\'\"\\n                                    model=\"$ctrl.state.daily.everyWeekDay\"\\n                                    select-class=\"$ctrl.parsedOptions.formSelectClass\"\\n                                    use-24-hour-time=\"$ctrl.parsedOptions.use24HourTime\"\\n                                    hide-seconds=\"$ctrl.parsedOptions.hideSeconds\">\\n                            </cron-gen-time-select>\\n                        </div>\\n                    </div>\\n                    <div class=\"tab-pane\"\\n                         ng-show=\"!$ctrl.parsedOptions.hideWeeklyTab\"\\n                         ng-class=\"{\\'active\\': $ctrl.activeTab === \\'weekly\\'}\">\\n                        <div class=\"well well-small row\">\\n                            <div class=\"col-sm-6\">\\n                                <input type=\"checkbox\"\\n                                       name=\"weeklyMON\"\\n                                       ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'weekly\\'\"\\n                                       ng-change=\"$ctrl.regenerateCron()\"\\n                                       ng-model=\"$ctrl.state.weekly.MON\"\\n                                       ng-class=\"$ctrl.parsedOptions.formCheckboxClass\">\\n                                {{ \\'MONDAY\\' | translate}}\\n                            </div>\\n                            <div class=\"col-sm-6\">\\n                                <input type=\"checkbox\"\\n                                       name=\"weeklyTUE\"\\n                                       ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'weekly\\'\"\\n                                       ng-change=\"$ctrl.regenerateCron()\"\\n                                       ng-model=\"$ctrl.state.weekly.TUE\"\\n                                       ng-class=\"$ctrl.parsedOptions.formCheckboxClass\">\\n                                {{ \\'TUESDAY\\' | translate}}\\n                            </div>\\n                            <div class=\"col-sm-6\">\\n                                <input type=\"checkbox\"\\n                                       name=\"weeklyWED\"\\n                                       ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'weekly\\'\"\\n                                       ng-change=\"$ctrl.regenerateCron()\"\\n                                       ng-model=\"$ctrl.state.weekly.WED\"\\n                                       ng-class=\"$ctrl.parsedOptions.formCheckboxClass\">\\n                                {{ \\'WEDNESDAY\\' | translate}}\\n                            </div>\\n                            <div class=\"col-sm-6\">\\n                                <input type=\"checkbox\"\\n                                       name=\"weeklyTHU\"\\n                                       ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'weekly\\'\"\\n                                       ng-change=\"$ctrl.regenerateCron()\"\\n                                       ng-model=\"$ctrl.state.weekly.THU\"\\n                                       ng-class=\"$ctrl.parsedOptions.formCheckboxClass\">\\n                                {{ \\'THURSDAY\\' | translate}}\\n                            </div>\\n                            <div class=\"col-sm-6\">\\n                                <input type=\"checkbox\"\\n                                       name=\"weeklyFRI\"\\n                                       ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'weekly\\'\"\\n                                       ng-change=\"$ctrl.regenerateCron()\"\\n                                       ng-model=\"$ctrl.state.weekly.FRI\"\\n                                       ng-class=\"$ctrl.parsedOptions.formCheckboxClass\">\\n                                {{ \\'FRIDAY\\' | translate}}\\n                            </div>\\n                            <div class=\"col-sm-6\">\\n                                <input type=\"checkbox\"\\n                                       name=\"weeklySAT\"\\n                                       ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'weekly\\'\"\\n                                       ng-change=\"$ctrl.regenerateCron()\"\\n                                       ng-model=\"$ctrl.state.weekly.SAT\"\\n                                       ng-class=\"$ctrl.parsedOptions.formCheckboxClass\">\\n                                {{ \\'SATURDAY\\' | translate}}\\n                            </div>\\n                            <div class=\"col-sm-6\">\\n                                <input type=\"checkbox\"\\n                                       name=\"weeklySUN\"\\n                                       ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'weekly\\'\"\\n                                       ng-change=\"$ctrl.regenerateCron()\"\\n                                       ng-model=\"$ctrl.state.weekly.SUN\"\\n                                       ng-class=\"$ctrl.parsedOptions.formCheckboxClass\">\\n                                {{ \\'SUNDAY\\' | translate}}\\n                            </div>\\n                        </div>\\n                        {{ \\'START_TIME\\' | translate}}\\n                        <cron-gen-time-select\\n                                is-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'weekly\\'\"\\n                                on-change=\"$ctrl.regenerateCron()\"\\n                                name-prefix=\"weekly\"\\n                                is-required=\"$ctrl.activeTab === \\'weekly\\'\"\\n                                model=\"$ctrl.state.weekly\"\\n                                select-class=\"$ctrl.parsedOptions.formSelectClass\"\\n                                use-24-hour-time=\"$ctrl.parsedOptions.use24HourTime\"\\n                                hide-seconds=\"$ctrl.parsedOptions.hideSeconds\">\\n                        </cron-gen-time-select>\\n                    </div>\\n                    <div class=\"tab-pane\"\\n                         ng-show=\"!$ctrl.parsedOptions.hideMonthlyTab\"\\n                         ng-class=\"{\\'active\\': $ctrl.activeTab === \\'monthly\\'}\">\\n                        <div class=\"well well-small\">\\n                            <input type=\"radio\"\\n                                   value=\"specificDay\"\\n                                   ng-disabled=\"$ctrl.ngDisabled\"\\n                                   ng-change=\"$ctrl.regenerateCron()\"\\n                                   ng-model=\"$ctrl.state.monthly.subTab\"\\n                                   ng-class=\"$ctrl.state.formRadioClass\"\\n                                   name=\"monthly-radio\"\\n                                   checked=\"checked\">\\n                            {{ \\'ON_THE\\' | translate}}\\n                            <select class=\"month-days\"\\n                                    name=\"monthlySpecificDayDay\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'monthly\\' || $ctrl.state.monthly.subTab !== \\'specificDay\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.monthly.specificDay.day\"\\n                                    ng-required=\"$ctrl.activeTab === \\'monthly\\' && $ctrl.state.monthly.subTab === \\'specificDay\\'\"\\n                                    ng-options=\"monthDaysWithLast as $ctrl.monthDayDisplay(monthDaysWithLast) for monthDaysWithLast in $ctrl.selectOptions.monthDaysWithLasts\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'OF_EVERY\\' | translate}}\\n                            <select class=\"months-small\"\\n                                    name=\"monthlySpecificDayMonths\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'monthly\\' || $ctrl.state.monthly.subTab !== \\'specificDay\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.monthly.specificDay.months\"\\n                                    ng-required=\"$ctrl.activeTab === \\'monthly\\' && $ctrl.state.monthly.subTab === \\'specificDay\\'\"\\n                                    ng-options=\"month as month for month in $ctrl.selectOptions.months\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'MONTHS_AT\\' | translate}}\\n                            <cron-gen-time-select\\n                                    is-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'monthly\\' || $ctrl.state.monthly.subTab !== \\'specificDay\\'\"\\n                                    on-change=\"$ctrl.regenerateCron()\"\\n                                    name-prefix=\"monthlySpecificDay\"\\n                                    is-required=\"$ctrl.activeTab === \\'monthly\\' && $ctrl.state.monthly.subTab === \\'specificDay\\'\"\\n                                    model=\"$ctrl.state.monthly.specificDay\"\\n                                    select-class=\"$ctrl.parsedOptions.formSelectClass\"\\n                                    use-24-hour-time=\"$ctrl.parsedOptions.use24HourTime\"\\n                                    hide-seconds=\"$ctrl.parsedOptions.hideSeconds\">\\n                            </cron-gen-time-select>\\n                        </div>\\n                        <div class=\"well well-small\" ng-hide=\"$ctrl.cronFormat ==\\'unix\\'\">\\n                            <input type=\"radio\"\\n                                   value=\"specificWeekDay\"\\n                                   ng-disabled=\"$ctrl.ngDisabled\"\\n                                   ng-change=\"$ctrl.regenerateCron()\"\\n                                   ng-model=\"$ctrl.state.monthly.subTab\"\\n                                   ng-class=\"$ctrl.state.formRadioClass\"\\n                                   name=\"monthly-radio\">\\n                            {{ \\'ON_THE\\' | translate}}\\n                            <select class=\"day-order-in-month\"\\n                                    name=\"monthlySpecificWeekDayMonthWeek\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'monthly\\' || $ctrl.state.monthly.subTab !== \\'specificWeekDay\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.monthly.specificWeekDay.monthWeek\"\\n                                    ng-required=\"$ctrl.activeTab === \\'monthly\\' && $ctrl.state.monthly.subTab === \\'specificWeekDay\\'\"\\n                                    ng-options=\"monthWeek as $ctrl.monthWeekDisplay(monthWeek) for monthWeek in $ctrl.selectOptions.monthWeeks\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            <select class=\"week-days\"\\n                                    name=\"monthlySpecificWeekDayDay\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'monthly\\' || $ctrl.state.monthly.subTab !== \\'specificWeekDay\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.monthly.specificWeekDay.day\"\\n                                    ng-required=\"$ctrl.activeTab === \\'monthly\\' && $ctrl.state.monthly.subTab === \\'specificWeekDay\\'\"\\n                                    ng-options=\"day as $ctrl.dayDisplay(day) for day in $ctrl.selectOptions.days\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'OF_EVERY\\' | translate}}\\n                            <select class=\"months-small\"\\n                                    name=\"monthlySpecificWeekDayMonths\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'monthly\\' || $ctrl.state.monthly.subTab !== \\'specificWeekDay\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.monthly.specificWeekDay.months\"\\n                                    ng-required=\"$ctrl.activeTab === \\'monthly\\' && $ctrl.state.monthly.subTab === \\'specificWeekDay\\'\"\\n                                    ng-options=\"month as month for month in $ctrl.selectOptions.months\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'MONTHS_AT\\' | translate}}\\n                            <cron-gen-time-select\\n                                    is-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'monthly\\' || $ctrl.state.monthly.subTab !== \\'specificWeekDay\\'\"\\n                                    on-change=\"$ctrl.regenerateCron()\"\\n                                    name-prefix=\"monthlySpecificWeekDay\"\\n                                    is-required=\"$ctrl.activeTab === \\'monthly\\' && $ctrl.state.monthly.subTab === \\'specificWeekDay\\'\"\\n                                    model=\"$ctrl.state.monthly.specificWeekDay\"\\n                                    select-class=\"$ctrl.parsedOptions.formSelectClass\"\\n                                    use-24-hour-time=\"$ctrl.parsedOptions.use24HourTime\"\\n                                    hide-seconds=\"$ctrl.parsedOptions.hideSeconds\">\\n                            </cron-gen-time-select>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\"tab-pane\"\\n                         ng-show=\"!$ctrl.parsedOptions.hideYearlyTab\"\\n                         ng-class=\"{\\'active\\': $ctrl.activeTab === \\'yearly\\'}\">\\n                        <div class=\"well well-small\">\\n                            <input type=\"radio\"\\n                                   value=\"specificMonthDay\"\\n                                   ng-disabled=\"$ctrl.ngDisabled\"\\n                                   ng-change=\"$ctrl.regenerateCron()\"\\n                                   ng-model=\"$ctrl.state.yearly.subTab\"\\n                                   ng-class=\"$ctrl.state.formRadioClass\"\\n                                   name=\"yearly-radio\">\\n                            {{ \\'EVERY_MONTH\\' | translate}}\\n                            <select class=\"months\"\\n                                    name=\"yearlySpecificMonthDayMonth\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'yearly\\' || $ctrl.state.yearly.subTab !== \\'specificMonthDay\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.yearly.specificMonthDay.month\"\\n                                    ng-required=\"$ctrl.activeTab === \\'yearly\\' && $ctrl.state.yearly.subTab === \\'specificMonthDay\\'\"\\n                                    ng-options=\"month as $ctrl.monthDisplay(month) for month in $ctrl.selectOptions.months\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'ON_THE_SMALL\\' | translate}}\\n                            <select class=\"month-days\"\\n                                    name=\"yearlySpecificMonthDayDay\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'yearly\\' || $ctrl.state.yearly.subTab !== \\'specificMonthDay\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.yearly.specificMonthDay.day\"\\n                                    ng-required=\"$ctrl.activeTab === \\'yearly\\' && $ctrl.state.yearly.subTab === \\'specificMonthDay\\'\"\\n                                    ng-options=\"monthDaysWithLast as $ctrl.monthDayDisplay(monthDaysWithLast) for monthDaysWithLast in $ctrl.selectOptions.monthDaysWithLasts\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'AT\\' | translate}}\\n                            <cron-gen-time-select\\n                                    is-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'yearly\\' || $ctrl.state.yearly.subTab !== \\'specificMonthDay\\'\"\\n                                    on-change=\"$ctrl.regenerateCron()\"\\n                                    is-required=\"$ctrl.activeTab === \\'yearly\\' && $ctrl.state.yearly.subTab === \\'specificMonthDay\\'\"\\n                                    name-prefix=\"yearlySpecificMonthDay\"\\n                                    model=\"$ctrl.state.yearly.specificMonthDay\"\\n                                    select-class=\"$ctrl.parsedOptions.formSelectClass\"\\n                                    use-24-hour-time=\"$ctrl.parsedOptions.use24HourTime\"\\n                                    hide-seconds=\"$ctrl.parsedOptions.hideSeconds\">\\n                            </cron-gen-time-select>\\n                        </div>\\n                        <div class=\"well well-small\" ng-hide=\"$ctrl.cronFormat ==\\'unix\\'\">\\n                            <input type=\"radio\"\\n                                   value=\"specificMonthWeek\"\\n                                   ng-disabled=\"$ctrl.ngDisabled\"\\n                                   ng-change=\"$ctrl.regenerateCron()\"\\n                                   ng-model=\"$ctrl.state.yearly.subTab\"\\n                                   ng-class=\"$ctrl.state.formRadioClass\"\\n                                   name=\"yearly-radio\">\\n                            {{ \\'EVERY_MONTH\\' | translate}}\\n                            <select class=\"day-order-in-month\"\\n                                    name=\"yearlySpecificMonthWeekMonthWeek\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'yearly\\' || $ctrl.state.yearly.subTab !== \\'specificMonthWeek\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.yearly.specificMonthWeek.monthWeek\"\\n                                    ng-required=\"$ctrl.activeTab === \\'yearly\\' && $ctrl.state.yearly.subTab === \\'specificMonthWeek\\'\"\\n                                    ng-options=\"monthWeek as $ctrl.monthWeekDisplay(monthWeek) for monthWeek in $ctrl.selectOptions.monthWeeks\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            <select class=\"week-days\"\\n                                    name=\"yearlySpecificMonthWeekMonthDay\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'yearly\\' || $ctrl.state.yearly.subTab !== \\'specificMonthWeek\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.yearly.specificMonthWeek.day\"\\n                                    ng-required=\"$ctrl.activeTab === \\'yearly\\' && $ctrl.state.yearly.subTab === \\'specificMonthWeek\\'\"\\n                                    ng-options=\"day as $ctrl.dayDisplay(day) for day in $ctrl.selectOptions.days\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'OF\\' | translate}}\\n                            <select class=\"months\"\\n                                    name=\"yearlySpecificMonthWeekMontMonth\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'yearly\\' || $ctrl.state.yearly.subTab !== \\'specificMonthWeek\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.yearly.specificMonthWeek.month\"\\n                                    ng-required=\"$ctrl.activeTab === \\'yearly\\' && $ctrl.state.yearly.subTab === \\'specificMonthWeek\\'\"\\n                                    ng-options=\"month as $ctrl.monthDisplay(month) for month in $ctrl.selectOptions.months\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'AT\\' | translate}}\\n                            <cron-gen-time-select\\n                                    is-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'yearly\\' || $ctrl.state.yearly.subTab !== \\'specificMonthWeek\\'\"\\n                                    on-change=\"$ctrl.regenerateCron()\"\\n                                    name-prefix=\"yearlySpecificMonthWeek\"\\n                                    is-required=\"$ctrl.activeTab === \\'yearly\\' && $ctrl.state.yearly.subTab === \\'specificMonthWeek\\'\"\\n                                    model=\"$ctrl.state.yearly.specificMonthWeek\"\\n                                    select-class=\"$ctrl.parsedOptions.formSelectClass\"\\n                                    use-24-hour-time=\"$ctrl.parsedOptions.use24HourTime\"\\n                                    hide-seconds=\"$ctrl.parsedOptions.hideSeconds\">\\n                            </cron-gen-time-select>\\n                        </div>\\n                    </div>\\n                    <div class=\"tab-pane\"\\n                         ng-show=\"!$ctrl.parsedOptions.hideAdvancedTab\"\\n                         ng-class=\"{\\'active\\': $ctrl.activeTab === \\'advanced\\'}\">\\n                        {{ \\'CRON_EXPRESSION\\' | translate}}\\n                        <input type=\"text\"\\n                               class=\"advanced-cron-gen-input\"\\n                               name=\"advancedExpression\"\\n                               ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'advanced\\'\"\\n                               ng-change=\"$ctrl.regenerateCron()\"\\n                               ng-model=\"$ctrl.state.advanced.expression\"\\n                               ng-required=\"$ctrl.activeTab === \\'advanced\\'\"\\n                               ng-class=\"$ctrl.parsedOptions.formInputClass\">\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>');}]);"]}