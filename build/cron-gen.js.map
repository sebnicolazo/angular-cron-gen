{"version":3,"sources":["cron-gen.module.js","templates.js"],"names":[],"mappings":"AAAA,CAAC,YAAY;EACX;;EAEA,SAAS,gBAAgB,UAAU,aAAa;IAC9C,IAAI,EAAE,oBAAoB,cAAc;MACtC,MAAM,IAAI,UAAU;;;;EAIxB,SAAS,kBAAkB,QAAQ,OAAO;IACxC,KAAK,IAAI,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;MACrC,IAAI,aAAa,MAAM;MACvB,WAAW,aAAa,WAAW,cAAc;MACjD,WAAW,eAAe;MAC1B,IAAI,WAAW,YAAY,WAAW,WAAW;MACjD,OAAO,eAAe,QAAQ,WAAW,KAAK;;;;EAIlD,SAAS,aAAa,aAAa,YAAY,aAAa;IAC1D,IAAI,YAAY,kBAAkB,YAAY,WAAW;IACzD,IAAI,aAAa,kBAAkB,aAAa;IAChD,OAAO;;;EAGT,SAAS,eAAe,KAAK,GAAG;IAC9B,OAAO,gBAAgB,QAAQ,sBAAsB,KAAK,MAAM,4BAA4B,KAAK,MAAM;;;EAGzG,SAAS,mBAAmB,KAAK;IAC/B,OAAO,mBAAmB,QAAQ,iBAAiB,QAAQ,4BAA4B,QAAQ;;;EAGjG,SAAS,mBAAmB,KAAK;IAC/B,IAAI,MAAM,QAAQ,MAAM,OAAO,kBAAkB;;;EAGnD,SAAS,gBAAgB,KAAK;IAC5B,IAAI,MAAM,QAAQ,MAAM,OAAO;;;EAGjC,SAAS,iBAAiB,MAAM;IAC9B,IAAI,OAAO,WAAW,eAAe,OAAO,YAAY,OAAO,OAAO,OAAO,MAAM,KAAK;;;EAG1F,SAAS,sBAAsB,KAAK,GAAG;IACrC,IAAI,OAAO,WAAW,eAAe,EAAE,OAAO,YAAY,OAAO,OAAO;IACxE,IAAI,OAAO;IACX,IAAI,KAAK;IACT,IAAI,KAAK;IACT,IAAI,KAAK;;IAET,IAAI;MACF,KAAK,IAAI,KAAK,IAAI,OAAO,aAAa,IAAI,EAAE,KAAK,CAAC,KAAK,GAAG,QAAQ,OAAO,KAAK,MAAM;QAClF,KAAK,KAAK,GAAG;;QAEb,IAAI,KAAK,KAAK,WAAW,GAAG;;MAE9B,OAAO,KAAK;MACZ,KAAK;MACL,KAAK;cACG;MACR,IAAI;QACF,IAAI,CAAC,MAAM,GAAG,aAAa,MAAM,GAAG;gBAC5B;QACR,IAAI,IAAI,MAAM;;;;IAIlB,OAAO;;;EAGT,SAAS,4BAA4B,GAAG,QAAQ;IAC9C,IAAI,CAAC,GAAG;IACR,IAAI,OAAO,MAAM,UAAU,OAAO,kBAAkB,GAAG;IACvD,IAAI,IAAI,OAAO,UAAU,SAAS,KAAK,GAAG,MAAM,GAAG,CAAC;IACpD,IAAI,MAAM,YAAY,EAAE,aAAa,IAAI,EAAE,YAAY;IACvD,IAAI,MAAM,SAAS,MAAM,OAAO,OAAO,MAAM,KAAK;IAClD,IAAI,MAAM,eAAe,2CAA2C,KAAK,IAAI,OAAO,kBAAkB,GAAG;;;EAG3G,SAAS,kBAAkB,KAAK,KAAK;IACnC,IAAI,OAAO,QAAQ,MAAM,IAAI,QAAQ,MAAM,IAAI;;IAE/C,KAAK,IAAI,IAAI,GAAG,OAAO,IAAI,MAAM,MAAM,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI;;IAEnE,OAAO;;;EAGT,SAAS,qBAAqB;IAC5B,MAAM,IAAI,UAAU;;;EAGtB,SAAS,mBAAmB;IAC1B,MAAM,IAAI,UAAU;;;EAGtB,IAAI,0BAA0B,CAAC,UAAU;EACzC,IAAI,SAAS;IACX,MAAM;IACN,OAAO;IACP,OAAO;;;wFAET,IAAI,gCAAgC,YAAY;IAC9C,SAAS,iBAAiB,QAAQ,YAAY,SAAS,gBAAgB;MACrE;;MAEA,IAAI,QAAQ;;MAEZ,gBAAgB,MAAM;;MAEtB,KAAK,gBAAgB,KAAK,oBAAoB,KAAK;MACnD,WAAW,IAAI,KAAK,cAAc;MAClC,QAAQ,OAAO,MAAM;QACnB,gBAAgB;QAChB,QAAQ;QACR,WAAW;QACX,YAAY;QACZ,cAAc,OAAO;QACrB,WAAW,YAAY;UACrB,IAAI,CAAC,MAAM,cAAc,gBAAgB;YACvC,OAAO;iBACF,IAAI,CAAC,MAAM,cAAc,eAAe;YAC7C,OAAO;iBACF,IAAI,CAAC,MAAM,cAAc,cAAc;YAC5C,OAAO;iBACF,IAAI,CAAC,MAAM,cAAc,eAAe;YAC7C,OAAO;iBACF,IAAI,CAAC,MAAM,cAAc,gBAAgB;YAC9C,OAAO;iBACF,IAAI,CAAC,MAAM,cAAc,eAAe;YAC7C,OAAO;iBACF,IAAI,CAAC,MAAM,cAAc,iBAAiB;YAC/C,OAAO;;;UAGT,MAAM;;QAER,eAAe,eAAe;QAC9B,OAAO;UACL,SAAS;YACP,SAAS;YACT,SAAS;;UAEX,QAAQ;YACN,OAAO;YACP,SAAS;YACT,SAAS;;UAEX,OAAO;YACL,QAAQ;YACR,WAAW;cACT,MAAM;cACN,OAAO,KAAK,cAAc,gBAAgB,IAAI;cAC9C,SAAS;cACT,SAAS;cACT,UAAU,KAAK,cAAc,gBAAgB,OAAO;;YAEtD,cAAc;cACZ,OAAO,KAAK,cAAc,gBAAgB,IAAI;cAC9C,SAAS;cACT,SAAS;cACT,UAAU,KAAK,cAAc,gBAAgB,OAAO;;;UAGxD,QAAQ;YACN,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,OAAO,KAAK,cAAc,gBAAgB,IAAI;YAC9C,SAAS;YACT,SAAS;YACT,UAAU,KAAK,cAAc,gBAAgB,OAAO;;UAEtD,SAAS;YACP,QAAQ;YACR,aAAa;cACX,KAAK;cACL,QAAQ;cACR,OAAO,KAAK,cAAc,gBAAgB,IAAI;cAC9C,SAAS;cACT,SAAS;cACT,UAAU,KAAK,cAAc,gBAAgB,OAAO;;YAEtD,iBAAiB;cACf,WAAW;cACX,KAAK;cACL,QAAQ;cACR,OAAO,KAAK,cAAc,gBAAgB,IAAI;cAC9C,SAAS;cACT,SAAS;cACT,UAAU,KAAK,cAAc,gBAAgB,OAAO;;;UAGxD,QAAQ;YACN,QAAQ;YACR,kBAAkB;cAChB,OAAO;cACP,KAAK;cACL,OAAO,KAAK,cAAc,gBAAgB,IAAI;cAC9C,SAAS;cACT,SAAS;cACT,UAAU,KAAK,cAAc,gBAAgB,OAAO;;YAEtD,mBAAmB;cACjB,WAAW;cACX,KAAK;cACL,OAAO;cACP,OAAO,KAAK,cAAc,gBAAgB,IAAI;cAC9C,SAAS;cACT,SAAS;cACT,UAAU,KAAK,cAAc,gBAAgB,OAAO;;;UAGxD,UAAU;YACR,YAAY,KAAK,eAAe,WAAW,oBAAoB;;;;;MAKrE,IAAI,wBAAwB,QAAQ,KAAK,eAAe,CAAC,GAAG;QAC1D,MAAM,wBAAwB,OAAO,KAAK,YAAY;;;;MAIxD,OAAO,OAAO,iBAAiB,UAAU,MAAM;QAC7C,OAAO,MAAM,kBAAkB;;;MAGjC,OAAO,OAAO,iBAAiB,KAAK,eAAe,KAAK,OAAO;;;IAGjE,aAAa,kBAAkB,CAAC;MAC9B,KAAK;MACL,OAAO,SAAS,UAAU;QACxB,IAAI,SAAS;;;QAGb,IAAI,KAAK,YAAY,KAAK,MAAM;UAC9B,KAAK,YAAY,YAAY,eAAe,UAAU,YAAY;YAChE,OAAO,OAAO,eAAe,QAAQ,OAAO,YAAY;;;;OAI7D;MACD,KAAK;MACL,OAAO,SAAS,eAAe,SAAS;QACtC,KAAK,gBAAgB,KAAK,oBAAoB;QAC9C,KAAK,UAAU,IAAI,KAAK,cAAc;;OAEvC;MACD,KAAK;MACL,OAAO,SAAS,aAAa,QAAQ,KAAK;QACxC,OAAO;;QAEP,IAAI,CAAC,KAAK,YAAY;UACpB,KAAK,YAAY;UACjB,KAAK;;;OAGR;MACD,KAAK;MACL,OAAO,SAAS,WAAW,KAAK;QAC9B,QAAQ;UACN,KAAK;YACH,OAAO,KAAK,OAAO,aAAa;;UAElC,KAAK;YACH,OAAO,KAAK,OAAO,aAAa;;UAElC,KAAK;YACH,OAAO,KAAK,OAAO,aAAa;;UAElC,KAAK;YACH,OAAO,KAAK,OAAO,aAAa;;UAElC,KAAK;YACH,OAAO,KAAK,OAAO,aAAa;;UAElC,KAAK;YACH,OAAO,KAAK,OAAO,aAAa;;UAElC,KAAK;YACH,OAAO,KAAK,OAAO,aAAa;;;OAGrC;MACD,KAAK;MACL,OAAO,SAAS,iBAAiB,iBAAiB;QAChD,QAAQ;UACN,KAAK;YACH,OAAO,KAAK,OAAO,aAAa;;UAElC,KAAK;YACH,OAAO,KAAK,OAAO,aAAa;;UAElC,KAAK;YACH,OAAO,KAAK,OAAO,aAAa;;UAElC,KAAK;YACH,OAAO,KAAK,OAAO,aAAa;;UAElC,KAAK;YACH,OAAO,KAAK,OAAO,aAAa;;UAElC,KAAK;YACH,OAAO,KAAK,OAAO,aAAa;;;OAGrC;MACD,KAAK;MACL,OAAO,SAAS,aAAa,aAAa;QACxC,QAAQ;UACN,KAAK;YACH,OAAO,KAAK,OAAO,aAAa;;UAElC,KAAK;YACH,OAAO,KAAK,OAAO,aAAa;;UAElC,KAAK;YACH,OAAO,KAAK,OAAO,aAAa;;UAElC,KAAK;YACH,OAAO,KAAK,OAAO,aAAa;;UAElC,KAAK;YACH,OAAO,KAAK,OAAO,aAAa;;UAElC,KAAK;YACH,OAAO,KAAK,OAAO,aAAa;;UAElC,KAAK;YACH,OAAO,KAAK,OAAO,aAAa;;UAElC,KAAK;YACH,OAAO,KAAK,OAAO,aAAa;;UAElC,KAAK;YACH,OAAO,KAAK,OAAO,aAAa;;UAElC,KAAK;YACH,OAAO,KAAK,OAAO,aAAa;;UAElC,KAAK;YACH,OAAO,KAAK,OAAO,aAAa;;UAElC,KAAK;YACH,OAAO,KAAK,OAAO,aAAa;;;OAGrC;MACD,KAAK;MACL,OAAO,SAAS,gBAAgB,UAAU;QACxC,IAAI,aAAa,KAAK;UACpB,OAAO,KAAK,OAAO,aAAa;eAC3B,IAAI,aAAa,MAAM;UAC5B,OAAO,KAAK,OAAO,aAAa;eAC3B,IAAI,aAAa,MAAM;UAC5B,OAAO,KAAK,OAAO,aAAa;eAC3B;UACL,OAAO,GAAG,OAAO,UAAU,OAAO,KAAK,eAAe,UAAU,WAAW,KAAK,OAAO,KAAK,OAAO,aAAa;;;OAGnH;MACD,KAAK;MACL,OAAO,SAAS,YAAY,OAAO;QACjC,IAAI,KAAK,cAAc,eAAe;UACpC,OAAO;eACF;UACL,OAAO,CAAC,QAAQ,MAAM,KAAK;;;OAG9B;MACD,KAAK;MACL,OAAO,SAAS,YAAY,OAAO;QACjC,OAAO,KAAK,cAAc,gBAAgB,OAAO,SAAS,KAAK,OAAO;;OAEvE;MACD,KAAK;MACL,OAAO,SAAS,WAAW,MAAM,UAAU;QACzC,IAAI,KAAK,cAAc,eAAe;UACpC,OAAO;eACF;UACL,OAAO,aAAa,OAAO,SAAS,KAAK,IAAI,OAAO,SAAS,KAAK,KAAK,OAAO;;;OAGjF;MACD,KAAK;MACL,OAAO,SAAS,oBAAoB,SAAS;QAC3C,OAAO,QAAQ,OAAO;UACpB,gBAAgB;UAChB,iBAAiB;UACjB,gBAAgB;UAChB,mBAAmB;UACnB,gBAAgB;UAChB,eAAe;UACf,cAAc;UACd,eAAe;UACf,gBAAgB;UAChB,eAAe;UACf,iBAAiB;UACjB,eAAe;UACf,aAAa;UACb,UAAU;WACT;;OAEJ;MACD,KAAK;MACL,OAAO,SAAS,iBAAiB;QAC/B,IAAI,SAAS;;QAEb,KAAK,eAAe,OAAO;;QAE3B,QAAQ,KAAK;UACX,KAAK;YACH,QAAQ,KAAK;cACX,KAAK;gBACH,KAAK,UAAU,GAAG,OAAO,KAAK,MAAM,QAAQ,SAAS,OAAO,OAAO,KAAK,MAAM,QAAQ,SAAS;gBAC/F;;cAEF,KAAK;gBACH,KAAK,UAAU,GAAG,OAAO,KAAK,MAAM,OAAO,SAAS,KAAK,OAAO,KAAK,MAAM,OAAO,SAAS,OAAO,OAAO,KAAK,MAAM,OAAO,OAAO;gBAClI;;cAEF,KAAK;gBACH,QAAQ,KAAK,MAAM,MAAM;kBACvB,KAAK;oBACH,KAAK,UAAU,GAAG,OAAO,KAAK,MAAM,MAAM,UAAU,SAAS,KAAK,OAAO,KAAK,MAAM,MAAM,UAAU,SAAS,KAAK,OAAO,KAAK,WAAW,KAAK,MAAM,MAAM,UAAU,OAAO,KAAK,MAAM,MAAM,UAAU,WAAW,OAAO,OAAO,KAAK,MAAM,MAAM,UAAU,MAAM;oBAChQ;;kBAEF,KAAK;oBACH,KAAK,UAAU,GAAG,OAAO,KAAK,MAAM,MAAM,aAAa,SAAS,KAAK,OAAO,KAAK,MAAM,MAAM,aAAa,SAAS,KAAK,OAAO,KAAK,WAAW,KAAK,MAAM,MAAM,aAAa,OAAO,KAAK,MAAM,MAAM,aAAa,WAAW;oBAC7N;;kBAEF;oBACE,MAAM;;;gBAGV;;cAEF,KAAK;gBACH,IAAI,OAAO,KAAK,cAAc,KAAK,OAAO,UAAU,KAAK,KAAK;kBAC5D,OAAO,OAAO,MAAM,OAAO,OAAO,IAAI,OAAO,CAAC,QAAQ;mBACrD,IAAI,KAAK;gBACZ,KAAK,UAAU,GAAG,OAAO,KAAK,MAAM,OAAO,SAAS,KAAK,OAAO,KAAK,MAAM,OAAO,SAAS,KAAK,OAAO,KAAK,WAAW,KAAK,MAAM,OAAO,OAAO,KAAK,MAAM,OAAO,WAAW,SAAS,OAAO,MAAM;gBACnM;;cAEF,KAAK;gBACH,QAAQ,KAAK,MAAM,QAAQ;kBACzB,KAAK;oBACH,KAAK,UAAU,GAAG,OAAO,KAAK,MAAM,QAAQ,YAAY,SAAS,KAAK,OAAO,KAAK,MAAM,QAAQ,YAAY,SAAS,KAAK,OAAO,KAAK,WAAW,KAAK,MAAM,QAAQ,YAAY,OAAO,KAAK,MAAM,QAAQ,YAAY,WAAW,KAAK,OAAO,KAAK,MAAM,QAAQ,YAAY,KAAK,OAAO,OAAO,KAAK,MAAM,QAAQ,YAAY,QAAQ;oBACtU;;kBAEF,KAAK;oBACH,KAAK,UAAU,GAAG,OAAO,KAAK,MAAM,QAAQ,gBAAgB,SAAS,KAAK,OAAO,KAAK,MAAM,QAAQ,gBAAgB,SAAS,KAAK,OAAO,KAAK,WAAW,KAAK,MAAM,QAAQ,gBAAgB,OAAO,KAAK,MAAM,QAAQ,gBAAgB,WAAW,SAAS,OAAO,KAAK,MAAM,QAAQ,gBAAgB,QAAQ,KAAK,OAAO,KAAK,MAAM,QAAQ,gBAAgB,KAAK,OAAO,KAAK,MAAM,QAAQ,gBAAgB,WAAW;oBACrZ;;kBAEF;oBACE,MAAM;;;gBAGV;;cAEF,KAAK;gBACH,QAAQ,KAAK,MAAM,OAAO;kBACxB,KAAK;oBACH,KAAK,UAAU,GAAG,OAAO,KAAK,MAAM,OAAO,iBAAiB,SAAS,KAAK,OAAO,KAAK,MAAM,OAAO,iBAAiB,SAAS,KAAK,OAAO,KAAK,WAAW,KAAK,MAAM,OAAO,iBAAiB,OAAO,KAAK,MAAM,OAAO,iBAAiB,WAAW,KAAK,OAAO,KAAK,MAAM,OAAO,iBAAiB,KAAK,KAAK,OAAO,KAAK,MAAM,OAAO,iBAAiB,OAAO;oBAC3V;;kBAEF,KAAK;oBACH,KAAK,UAAU,GAAG,OAAO,KAAK,MAAM,OAAO,kBAAkB,SAAS,KAAK,OAAO,KAAK,MAAM,OAAO,kBAAkB,SAAS,KAAK,OAAO,KAAK,WAAW,KAAK,MAAM,OAAO,kBAAkB,OAAO,KAAK,MAAM,OAAO,kBAAkB,WAAW,OAAO,OAAO,KAAK,MAAM,OAAO,kBAAkB,OAAO,KAAK,OAAO,KAAK,MAAM,OAAO,kBAAkB,KAAK,OAAO,KAAK,MAAM,OAAO,kBAAkB,WAAW;oBACzZ;;kBAEF;oBACE,MAAM;;;gBAGV;;cAEF,KAAK;gBACH,KAAK,UAAU,KAAK,MAAM,SAAS;gBACnC;;cAEF;gBACE,MAAM;;;UAGZ,KAAK;YACH,QAAQ,KAAK;cACX,KAAK;gBACH,QAAQ,KAAK,MAAM,MAAM;kBACvB,KAAK;oBACH,KAAK,UAAU,GAAG,OAAO,KAAK,MAAM,MAAM,UAAU,SAAS,KAAK,OAAO,KAAK,WAAW,KAAK,MAAM,MAAM,UAAU,OAAO,KAAK,MAAM,MAAM,UAAU,WAAW,OAAO,OAAO,KAAK,MAAM,MAAM,UAAU,MAAM;oBAChN;;kBAEF,KAAK;oBACH,KAAK,UAAU,GAAG,OAAO,KAAK,MAAM,MAAM,aAAa,SAAS,KAAK,OAAO,KAAK,WAAW,KAAK,MAAM,MAAM,aAAa,OAAO,KAAK,MAAM,MAAM,aAAa,WAAW;oBAC1K;;kBAEF;oBACE,MAAM;;;gBAGV;;cAEF,KAAK;gBACH,IAAI,QAAQ,KAAK,cAAc,KAAK,OAAO,UAAU,KAAK,KAAK;kBAC7D,OAAO,OAAO,MAAM,OAAO,OAAO,IAAI,OAAO,CAAC,QAAQ;mBACrD,IAAI,KAAK;;gBAEZ,KAAK,UAAU,GAAG,OAAO,KAAK,MAAM,OAAO,SAAS,KAAK,OAAO,KAAK,WAAW,KAAK,MAAM,OAAO,OAAO,KAAK,MAAM,OAAO,WAAW,SAAS,OAAO;gBACtJ;;cAEF,KAAK;gBACH,QAAQ,KAAK,MAAM,QAAQ;kBACzB,KAAK;oBACH,KAAK,UAAU,GAAG,OAAO,KAAK,MAAM,QAAQ,YAAY,SAAS,KAAK,OAAO,KAAK,WAAW,KAAK,MAAM,QAAQ,YAAY,OAAO,KAAK,MAAM,QAAQ,YAAY,WAAW,KAAK,OAAO,KAAK,MAAM,QAAQ,YAAY,KAAK,OAAO,OAAO,KAAK,MAAM,QAAQ,YAAY,QAAQ;oBAClR;;kBAEF;oBACE,MAAM;;;gBAGV;;cAEF,KAAK;gBACH,QAAQ,KAAK,MAAM,OAAO;kBACxB,KAAK;oBACH,KAAK,UAAU,GAAG,OAAO,KAAK,MAAM,OAAO,iBAAiB,SAAS,KAAK,OAAO,KAAK,WAAW,KAAK,MAAM,OAAO,iBAAiB,OAAO,KAAK,MAAM,OAAO,iBAAiB,WAAW,KAAK,OAAO,KAAK,MAAM,OAAO,iBAAiB,KAAK,KAAK,OAAO,KAAK,MAAM,OAAO,iBAAiB,OAAO;oBACnS;;kBAEF;oBACE,MAAM;;;gBAGV;;cAEF,KAAK;gBACH,KAAK,UAAU,KAAK,MAAM,SAAS;gBACnC;;cAEF;gBACE,MAAM;;;;;OAKf;MACD,KAAK;MACL,OAAO,SAAS,kBAAkB,MAAM;QACtC,IAAI,SAAS;;QAEb,IAAI,KAAK,iBAAiB,OAAO,OAAO;UACtC,KAAK,eAAe,OAAO;UAC3B;eACK;UACL,KAAK,eAAe,OAAO;;;QAG7B,IAAI,CAAC,MAAM;UACT;;;QAGF,IAAI,WAAW,KAAK,MAAM;;QAE1B,IAAI,KAAK,eAAe,aAAa,SAAS,WAAW,KAAK,SAAS,WAAW,IAAI;UACpF,IAAI,YAAY,eAAe,UAAU;cACrC,UAAU,UAAU;cACpB,UAAU,UAAU;cACpB,QAAQ,UAAU;cAClB,aAAa,UAAU;cACvB,QAAQ,UAAU;cAClB,YAAY,UAAU;;UAE1B,IAAI,KAAK,MAAM,gCAAgC;YAC7C,KAAK,YAAY;YACjB,KAAK,MAAM,QAAQ,UAAU,SAAS,QAAQ,UAAU;YACxD,KAAK,MAAM,QAAQ,UAAU,SAAS;iBACjC,IAAI,KAAK,MAAM,iCAAiC;YACrD,KAAK,YAAY;YACjB,KAAK,MAAM,OAAO,QAAQ,SAAS,MAAM,UAAU;YACnD,KAAK,MAAM,OAAO,UAAU,SAAS;YACrC,KAAK,MAAM,OAAO,UAAU,SAAS;iBAChC,IAAI,KAAK,MAAM,gCAAgC;YACpD,KAAK,YAAY;YACjB,KAAK,MAAM,MAAM,SAAS;YAC1B,KAAK,MAAM,MAAM,UAAU,OAAO,SAAS,WAAW,UAAU;YAChE,IAAI,cAAc,SAAS;YAC3B,KAAK,MAAM,MAAM,UAAU,QAAQ,KAAK,YAAY;YACpD,KAAK,MAAM,MAAM,UAAU,WAAW,KAAK,YAAY;YACvD,KAAK,MAAM,MAAM,UAAU,UAAU,SAAS;YAC9C,KAAK,MAAM,MAAM,UAAU,UAAU,SAAS;iBACzC,IAAI,KAAK,MAAM,iCAAiC;YACrD,KAAK,YAAY;YACjB,KAAK,MAAM,MAAM,SAAS;;YAE1B,IAAI,eAAe,SAAS;;YAE5B,KAAK,MAAM,MAAM,aAAa,QAAQ,KAAK,YAAY;YACvD,KAAK,MAAM,MAAM,aAAa,WAAW,KAAK,YAAY;YAC1D,KAAK,MAAM,MAAM,aAAa,UAAU,SAAS;YACjD,KAAK,MAAM,MAAM,aAAa,UAAU,SAAS;iBAC5C,IAAI,KAAK,MAAM,wFAAwF;YAC5G,KAAK,YAAY;YACjB,KAAK,cAAc,KAAK,QAAQ,UAAU,SAAS;cACjD,OAAO,OAAO,MAAM,OAAO,WAAW;;YAExC,UAAU,MAAM,KAAK,QAAQ,UAAU,SAAS;cAC9C,OAAO,OAAO,MAAM,OAAO,WAAW;;;YAGxC,IAAI,gBAAgB,SAAS;;YAE7B,KAAK,MAAM,OAAO,QAAQ,KAAK,YAAY;YAC3C,KAAK,MAAM,OAAO,WAAW,KAAK,YAAY;YAC9C,KAAK,MAAM,OAAO,UAAU,SAAS;YACrC,KAAK,MAAM,OAAO,UAAU,SAAS;iBAChC,IAAI,KAAK,MAAM,2CAA2C;YAC/D,KAAK,YAAY;YACjB,KAAK,MAAM,QAAQ,SAAS;YAC5B,KAAK,MAAM,QAAQ,YAAY,MAAM;YACrC,KAAK,MAAM,QAAQ,YAAY,SAAS,SAAS,MAAM,UAAU;;YAEjE,IAAI,gBAAgB,SAAS;;YAE7B,KAAK,MAAM,QAAQ,YAAY,QAAQ,KAAK,YAAY;YACxD,KAAK,MAAM,QAAQ,YAAY,WAAW,KAAK,YAAY;YAC3D,KAAK,MAAM,QAAQ,YAAY,UAAU,SAAS;YAClD,KAAK,MAAM,QAAQ,YAAY,UAAU,SAAS;iBAC7C,IAAI,KAAK,MAAM,uEAAuE;YAC3F,IAAI,MAAM,UAAU,OAAO,GAAG;YAC9B,IAAI,YAAY,UAAU,OAAO;YACjC,KAAK,YAAY;YACjB,KAAK,MAAM,QAAQ,SAAS;YAC5B,KAAK,MAAM,QAAQ,gBAAgB,YAAY;YAC/C,KAAK,MAAM,QAAQ,gBAAgB,MAAM;YACzC,KAAK,MAAM,QAAQ,gBAAgB,SAAS,SAAS,MAAM,UAAU;;YAErE,IAAI,gBAAgB,SAAS;;YAE7B,KAAK,MAAM,QAAQ,gBAAgB,QAAQ,KAAK,YAAY;YAC5D,KAAK,MAAM,QAAQ,gBAAgB,WAAW,KAAK,YAAY;YAC/D,KAAK,MAAM,QAAQ,gBAAgB,UAAU,SAAS;YACtD,KAAK,MAAM,QAAQ,gBAAgB,UAAU,SAAS;iBACjD,IAAI,KAAK,MAAM,wCAAwC;YAC5D,KAAK,YAAY;YACjB,KAAK,MAAM,OAAO,SAAS;YAC3B,KAAK,MAAM,OAAO,iBAAiB,QAAQ,SAAS;YACpD,KAAK,MAAM,OAAO,iBAAiB,MAAM;;YAEzC,IAAI,gBAAgB,SAAS;;YAE7B,KAAK,MAAM,OAAO,iBAAiB,QAAQ,KAAK,YAAY;YAC5D,KAAK,MAAM,OAAO,iBAAiB,WAAW,KAAK,YAAY;YAC/D,KAAK,MAAM,OAAO,iBAAiB,UAAU,SAAS;YACtD,KAAK,MAAM,OAAO,iBAAiB,UAAU,SAAS;iBACjD,IAAI,KAAK,MAAM,oEAAoE;YACxF,IAAI,OAAO,UAAU,OAAO,GAAG;;YAE/B,IAAI,aAAa,UAAU,OAAO;;YAElC,KAAK,YAAY;YACjB,KAAK,MAAM,OAAO,SAAS;YAC3B,KAAK,MAAM,OAAO,kBAAkB,YAAY;YAChD,KAAK,MAAM,OAAO,kBAAkB,MAAM;YAC1C,KAAK,MAAM,OAAO,kBAAkB,QAAQ,SAAS;;YAErD,IAAI,gBAAgB,SAAS;;YAE7B,KAAK,MAAM,OAAO,kBAAkB,QAAQ,KAAK,YAAY;YAC7D,KAAK,MAAM,OAAO,kBAAkB,WAAW,KAAK,YAAY;YAChE,KAAK,MAAM,OAAO,kBAAkB,UAAU,SAAS;YACvD,KAAK,MAAM,OAAO,kBAAkB,UAAU,SAAS;iBAClD;YACL,KAAK,YAAY;YACjB,KAAK,MAAM,SAAS,aAAa;;eAE9B,IAAI,KAAK,eAAe,UAAU,SAAS,WAAW,GAAG;UAC9D,IAAI,aAAa,eAAe,UAAU;cACtC,WAAW,WAAW;cACtB,SAAS,WAAW;cACpB,cAAc,WAAW;cACzB,SAAS,WAAW;cACpB,aAAa,WAAW;;UAE5B,IAAI,KAAK,MAAM,0BAA0B;YACvC,KAAK,YAAY;YACjB,KAAK,MAAM,MAAM,SAAS;YAC1B,KAAK,MAAM,MAAM,UAAU,OAAO,SAAS,YAAY,UAAU;;YAEjE,IAAI,gBAAgB,SAAS;;YAE7B,KAAK,MAAM,MAAM,UAAU,QAAQ,KAAK,YAAY;YACpD,KAAK,MAAM,MAAM,UAAU,WAAW,KAAK,YAAY;YACvD,KAAK,MAAM,MAAM,UAAU,UAAU,SAAS;YAC9C,KAAK,MAAM,MAAM,UAAU,UAAU;iBAChC,IAAI,KAAK,MAAM,0BAA0B;YAC9C,KAAK,YAAY;YACjB,KAAK,MAAM,MAAM,SAAS;;YAE1B,IAAI,gBAAgB,SAAS;;YAE7B,KAAK,MAAM,MAAM,aAAa,QAAQ,KAAK,YAAY;YACvD,KAAK,MAAM,MAAM,aAAa,WAAW,KAAK,YAAY;YAC1D,KAAK,MAAM,MAAM,aAAa,UAAU,SAAS;YACjD,KAAK,MAAM,MAAM,aAAa,UAAU;iBACnC,IAAI,KAAK,MAAM,iFAAiF;YACrG,KAAK,YAAY;YACjB,KAAK,cAAc,KAAK,QAAQ,UAAU,SAAS;cACjD,OAAO,OAAO,MAAM,OAAO,WAAW;;;YAGxC,WAAW,MAAM,KAAK,QAAQ,UAAU,SAAS;cAC/C,OAAO,OAAO,MAAM,OAAO,WAAW;;;YAGxC,IAAI,gBAAgB,SAAS;;YAE7B,KAAK,MAAM,OAAO,QAAQ,KAAK,YAAY;YAC3C,KAAK,MAAM,OAAO,WAAW,KAAK,YAAY;YAC9C,KAAK,MAAM,OAAO,UAAU,SAAS;YACrC,KAAK,MAAM,OAAO,UAAU;iBACvB,IAAI,KAAK,MAAM,0BAA0B;YAC9C,KAAK,YAAY;YACjB,KAAK,MAAM,QAAQ,SAAS;YAC5B,KAAK,MAAM,QAAQ,YAAY,MAAM;YACrC,KAAK,MAAM,QAAQ,YAAY,SAAS,SAAS,OAAO,UAAU;;YAElE,IAAI,iBAAiB,SAAS;;YAE9B,KAAK,MAAM,QAAQ,YAAY,QAAQ,KAAK,YAAY;YACxD,KAAK,MAAM,QAAQ,YAAY,WAAW,KAAK,YAAY;YAC3D,KAAK,MAAM,QAAQ,YAAY,UAAU,SAAS;YAClD,KAAK,MAAM,QAAQ,YAAY,UAAU;iBACpC,IAAI,KAAK,MAAM,uBAAuB;YAC3C,KAAK,YAAY;YACjB,KAAK,MAAM,OAAO,SAAS;YAC3B,KAAK,MAAM,OAAO,iBAAiB,QAAQ,SAAS;YACpD,KAAK,MAAM,OAAO,iBAAiB,MAAM;;YAEzC,IAAI,iBAAiB,SAAS;;YAE9B,KAAK,MAAM,OAAO,iBAAiB,QAAQ,KAAK,YAAY;YAC5D,KAAK,MAAM,OAAO,iBAAiB,WAAW,KAAK,YAAY;YAC/D,KAAK,MAAM,OAAO,iBAAiB,UAAU,SAAS;YACtD,KAAK,MAAM,OAAO,iBAAiB,UAAU;iBACxC;YACL,KAAK,YAAY;YACjB,KAAK,MAAM,SAAS,aAAa;;eAE9B;UACL,MAAM;;;;;IAKZ,OAAO;;;EAGT,IAAI,eAAe;;4CACnB,IAAI,8BAA8B,YAAY;IAC5C,SAAS,eAAe,SAAS;MAC/B,gBAAgB,MAAM;;MAEtB,KAAK,SAAS;;;IAGhB,aAAa,gBAAgB,CAAC;MAC5B,KAAK;MACL,OAAO,SAAS,QAAQ,YAAY,YAAY;QAC9C,IAAI,CAAC,YAAY;UACf,OAAO;;;QAGT,IAAI,sBAAsB,WAAW;;QAErC,QAAQ;UACN,KAAK;YACH,OAAO,CAAC,CAAC,oBAAoB,MAAM;;UAErC,KAAK;YACH,OAAO;;UAET;YACE,MAAM,wBAAwB,OAAO,YAAY;;;OAGtD;MACD,KAAK;MACL,OAAO,SAAS,UAAU,QAAQ;QAChC,IAAI,QAAQ,GAAG,OAAO;;QAEtB,IAAI,MAAM,SAAS,GAAG;UACpB,IAAI,oBAAoB,MAAM,OAAO,MAAM,SAAS;;UAEpD,IAAI,sBAAsB,KAAK;YAC7B,OAAO,KAAK,OAAO,aAAa;;;;QAIpC,IAAI,YAAY,MAAM,OAAO,MAAM,SAAS;;QAE5C,QAAQ;UACN,KAAK;YACH,OAAO,KAAK,OAAO,aAAa;;UAElC,KAAK;YACH,OAAO,KAAK,OAAO,aAAa;;UAElC,KAAK;YACH,OAAO,KAAK,OAAO,aAAa;;UAElC;YACE,OAAO,KAAK,OAAO,aAAa;;;OAGrC;MACD,KAAK;MACL,OAAO,SAAS,UAAU,QAAQ;QAChC,OAAO,GAAG,OAAO,QAAQ,WAAW,IAAI,IAAI,OAAO,UAAU,GAAG,OAAO;;OAExE;MACD,KAAK;MACL,OAAO,SAAS,MAAM,OAAO,KAAK;QAChC,IAAI,OAAO,QAAQ,aAAa;UAC9B,MAAM;UACN,QAAQ;;;QAGV,IAAI,QAAQ,KAAK,MAAM,GAAG,MAAM;;QAEhC,IAAI,MAAM,OAAO;UACf,OAAO,mBAAmB,IAAI,MAAM,MAAM,QAAQ,IAAI,UAAU,KAAK,KAAK;YACxE,OAAO,MAAM;;eAEV,IAAI,QAAQ,KAAK;UACtB,OAAO,mBAAmB,IAAI,MAAM,QAAQ,MAAM,IAAI,UAAU,KAAK,KAAK;YACxE,OAAO,MAAM;;eAEV;UACL,OAAO;;;OAGV;MACD,KAAK;MACL,OAAO,SAAS,gBAAgB;QAC9B,OAAO;UACL,QAAQ,KAAK,MAAM,GAAG;UACtB,YAAY,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM;UAC3C,MAAM,CAAC,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO;UACjD,SAAS,KAAK,MAAM,GAAG;UACvB,aAAa,KAAK,MAAM;UACxB,SAAS,KAAK,MAAM;UACpB,OAAO,KAAK,MAAM,GAAG;UACrB,WAAW,KAAK,MAAM,GAAG;UACzB,oBAAoB,mBAAmB,mBAAmB,IAAI,MAAM,KAAK,IAAI,UAAU,KAAK,KAAK;YAC/F,OAAO,GAAG,OAAO,MAAM;;;;;;IAM/B,OAAO;;;EAGT,IAAI,oBAAoB,SAAS,kBAAkB,QAAQ,gBAAgB;IACzE;;IAEA,IAAI,QAAQ;;IAEZ,gBAAgB,MAAM;;IAEtB,KAAK,iBAAiB;IACtB,KAAK,gBAAgB;MACnB,SAAS,eAAe,MAAM;MAC9B,SAAS,eAAe,MAAM;MAC9B,WAAW,CAAC,MAAM;;IAEpB,OAAO,OAAO,uBAAuB,YAAY;MAC/C,MAAM,cAAc,QAAQ,MAAM,gBAAgB,MAAM,eAAe,MAAM,MAAM,MAAM,eAAe,MAAM,GAAG;;;;;EAIrH,QAAQ,OAAO,oBAAoB,CAAC,2BAA2B,8BAAO,UAAU,oBAAoB;IAClG,mBAAmB,aAAa,MAAM;MACpC,WAAW;MACX,UAAU;MACV,SAAS;MACT,UAAU;MACV,WAAW;MACX,UAAU;MACV,YAAY;MACZ,SAAS;MACT,eAAe;MACf,UAAU;MACV,aAAa;MACb,kBAAkB;MAClB,cAAc;MACd,UAAU;MACV,0BAA0B;MAC1B,UAAU;MACV,WAAW;MACX,aAAa;MACb,YAAY;MACZ,UAAU;MACV,YAAY;MACZ,UAAU;MACV,cAAc;MACd,UAAU;MACV,gBAAgB;MAChB,YAAY;MACZ,aAAa;MACb,MAAM;MACN,MAAM;MACN,mBAAmB;MACnB,gBAAgB;MAChB,QAAQ;MACR,YAAY;MACZ,gBAAgB;MAChB,iBAAiB;MACjB,OAAO;MACP,gBAAgB;MAChB,iBAAiB;MACjB,gBAAgB;MAChB,mBAAmB;MACnB,SAAS;MACT,UAAU;MACV,SAAS;MACT,UAAU;MACV,SAAS;MACT,QAAQ;MACR,WAAW;MACX,YAAY;MACZ,SAAS;MACT,SAAS;MACT,OAAO;MACP,QAAQ;MACR,QAAQ;MACR,UAAU;MACV,aAAa;MACb,WAAW;MACX,YAAY;MACZ,YAAY;OACX,aAAa,MAAM;MACpB,WAAW;MACX,UAAU;MACV,SAAS;MACT,UAAU;MACV,WAAW;MACX,UAAU;MACV,YAAY;MACZ,SAAS;MACT,eAAe;MACf,UAAU;MACV,aAAa;MACb,kBAAkB;MAClB,cAAc;MACd,UAAU;MACV,0BAA0B;MAC1B,UAAU;MACV,WAAW;MACX,aAAa;MACb,YAAY;MACZ,UAAU;MACV,YAAY;MACZ,UAAU;MACV,cAAc;MACd,UAAU;MACV,gBAAgB;MAChB,YAAY;MACZ,aAAa;MACb,MAAM;MACN,MAAM;MACN,mBAAmB;MACnB,gBAAgB;MAChB,QAAQ;MACR,YAAY;MACZ,gBAAgB;MAChB,iBAAiB;MACjB,OAAO;MACP,gBAAgB;MAChB,iBAAiB;MACjB,gBAAgB;MAChB,mBAAmB;MACnB,SAAS;MACT,UAAU;MACV,SAAS;MACT,UAAU;MACV,SAAS;MACT,QAAQ;MACR,WAAW;MACX,YAAY;MACZ,SAAS;MACT,SAAS;MACT,OAAO;MACP,QAAQ;MACR,QAAQ;MACR,UAAU;MACV,aAAa;MACb,WAAW;MACX,YAAY;MACZ,YAAY;OACX,aAAa,MAAM;MACpB,WAAW;MACX,UAAU;MACV,SAAS;MACT,UAAU;MACV,WAAW;MACX,UAAU;MACV,YAAY;MACZ,SAAS;MACT,eAAe;MACf,UAAU;MACV,aAAa;MACb,kBAAkB;MAClB,cAAc;MACd,UAAU;MACV,0BAA0B;MAC1B,UAAU;MACV,WAAW;MACX,aAAa;MACb,YAAY;MACZ,UAAU;MACV,YAAY;MACZ,UAAU;MACV,cAAc;MACd,UAAU;MACV,gBAAgB;MAChB,YAAY;MACZ,aAAa;MACb,MAAM;MACN,MAAM;MACN,mBAAmB;MACnB,gBAAgB;MAChB,QAAQ;MACR,YAAY;MACZ,gBAAgB;MAChB,iBAAiB;MACjB,OAAO;MACP,gBAAgB;MAChB,iBAAiB;MACjB,gBAAgB;MAChB,mBAAmB;MACnB,SAAS;MACT,UAAU;MACV,SAAS;MACT,UAAU;MACV,SAAS;MACT,QAAQ;MACR,WAAW;MACX,YAAY;MACZ,SAAS;MACT,SAAS;MACT,OAAO;MACP,QAAQ;MACR,QAAQ;MACR,UAAU;MACV,aAAa;MACb,WAAW;MACX,YAAY;MACZ,YAAY;OACX,aAAa,MAAM;MACpB,WAAW;MACX,UAAU;MACV,SAAS;MACT,UAAU;MACV,WAAW;MACX,UAAU;MACV,YAAY;MACZ,SAAS;MACT,eAAe;MACf,UAAU;MACV,aAAa;MACb,kBAAkB;MAClB,cAAc;MACd,UAAU;MACV,0BAA0B;MAC1B,UAAU;MACV,WAAW;MACX,aAAa;MACb,YAAY;MACZ,UAAU;MACV,YAAY;MACZ,UAAU;MACV,cAAc;MACd,UAAU;MACV,gBAAgB;MAChB,YAAY;MACZ,aAAa;MACb,MAAM;MACN,MAAM;MACN,mBAAmB;MACnB,gBAAgB;MAChB,QAAQ;MACR,YAAY;MACZ,gBAAgB;MAChB,iBAAiB;MACjB,OAAO;MACP,gBAAgB;MAChB,iBAAiB;MACjB,gBAAgB;MAChB,mBAAmB;MACnB,SAAS;MACT,UAAU;MACV,SAAS;MACT,UAAU;MACV,SAAS;MACT,QAAQ;MACR,WAAW;MACX,YAAY;MACZ,SAAS;MACT,SAAS;MACT,OAAO;MACP,QAAQ;MACR,QAAQ;MACR,UAAU;MACV,aAAa;MACb,WAAW;MACX,YAAY;MACZ,YAAY;;MAEb,QAAQ,kBAAkB,gBAAgB,UAAU,qBAAqB;IAC1E,UAAU;MACR,YAAY;MACZ,UAAU;MACV,YAAY;MACZ,OAAO;MACP,aAAa;MACb,eAAe;MACf,aAAa;MACb,YAAY;;IAEd,aAAa;IACb,YAAY;KACX,UAAU,WAAW;IACtB,UAAU;MACR,SAAS;MACT,YAAY;MACZ,SAAS;MACT,YAAY;MACZ,aAAa;MACb,MAAM;;IAER,SAAS;MACP,aAAa;MACb,gBAAgB;MAChB,UAAU;;IAEZ,wBAAa,SAAS,YAAY,QAAQ;MACxC;;MAEA,OAAO,OAAO,eAAe;;IAE/B,YAAY;;;;AAIhB;oFCzoCA;AACA","file":"cron-gen.js","sourcesContent":["(function () {\n  'use strict';\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n  }\n\n  function _iterableToArrayLimit(arr, i) {\n    if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var ACCEPTABLE_CRON_FORMATS = ['quartz', 'unix'];\n  var States = {\n    INIT: 1,\n    DIRTY: 2,\n    CLEAN: 3\n  };\n  var CronGenComponent = /*#__PURE__*/function () {\n    function CronGenComponent($scope, $translate, $filter, cronGenService) {\n      'ngInject';\n\n      var _this = this;\n\n      _classCallCheck(this, CronGenComponent);\n\n      this.parsedOptions = this.mergeDefaultOptions(this.options);\n      $translate.use(this.parsedOptions.language);\n      angular.extend(this, {\n        cronGenService: cronGenService,\n        filter: $filter,\n        translate: $translate,\n        cronFormat: 'unix',\n        currentState: States.INIT,\n        activeTab: function () {\n          if (!_this.parsedOptions.hideMinutesTab) {\n            return 'minutes';\n          } else if (!_this.parsedOptions.hideHourlyTab) {\n            return 'hourly';\n          } else if (!_this.parsedOptions.hideDailyTab) {\n            return 'daily';\n          } else if (!_this.parsedOptions.hideWeeklyTab) {\n            return 'weekly';\n          } else if (!_this.parsedOptions.hideMonthlyTab) {\n            return 'monthly';\n          } else if (!_this.parsedOptions.hideYearlyTab) {\n            return 'yearly';\n          } else if (!_this.parsedOptions.hideAdvancedTab) {\n            return 'advanced';\n          }\n\n          throw 'No tabs available to make active';\n        }(),\n        selectOptions: cronGenService.selectOptions(),\n        state: {\n          minutes: {\n            minutes: 1,\n            seconds: 0\n          },\n          hourly: {\n            hours: 1,\n            minutes: 0,\n            seconds: 0\n          },\n          daily: {\n            subTab: 'everyDays',\n            everyDays: {\n              days: 1,\n              hours: this.parsedOptions.use24HourTime ? 0 : 1,\n              minutes: 0,\n              seconds: 0,\n              hourType: this.parsedOptions.use24HourTime ? null : 'AM'\n            },\n            everyWeekDay: {\n              hours: this.parsedOptions.use24HourTime ? 0 : 1,\n              minutes: 0,\n              seconds: 0,\n              hourType: this.parsedOptions.use24HourTime ? null : 'AM'\n            }\n          },\n          weekly: {\n            MON: true,\n            TUE: false,\n            WED: false,\n            THU: false,\n            FRI: false,\n            SAT: false,\n            SUN: false,\n            hours: this.parsedOptions.use24HourTime ? 0 : 1,\n            minutes: 0,\n            seconds: 0,\n            hourType: this.parsedOptions.use24HourTime ? null : 'AM'\n          },\n          monthly: {\n            subTab: 'specificDay',\n            specificDay: {\n              day: '1',\n              months: 1,\n              hours: this.parsedOptions.use24HourTime ? 0 : 1,\n              minutes: 0,\n              seconds: 0,\n              hourType: this.parsedOptions.use24HourTime ? null : 'AM'\n            },\n            specificWeekDay: {\n              monthWeek: '#1',\n              day: 'MON',\n              months: 1,\n              hours: this.parsedOptions.use24HourTime ? 0 : 1,\n              minutes: 0,\n              seconds: 0,\n              hourType: this.parsedOptions.use24HourTime ? null : 'AM'\n            }\n          },\n          yearly: {\n            subTab: 'specificMonthDay',\n            specificMonthDay: {\n              month: 1,\n              day: '1',\n              hours: this.parsedOptions.use24HourTime ? 0 : 1,\n              minutes: 0,\n              seconds: 0,\n              hourType: this.parsedOptions.use24HourTime ? null : 'AM'\n            },\n            specificMonthWeek: {\n              monthWeek: '#1',\n              day: 'MON',\n              month: 1,\n              hours: this.parsedOptions.use24HourTime ? 0 : 1,\n              minutes: 0,\n              seconds: 0,\n              hourType: this.parsedOptions.use24HourTime ? null : 'AM'\n            }\n          },\n          advanced: {\n            expression: this.cronFormat === 'quartz' ? '0 15 10 L-2 * ?' : '0 6 1 * *'\n          }\n        }\n      }); //Validate our opts\n\n      if (ACCEPTABLE_CRON_FORMATS.indexOf(this.cronFormat) == -1) {\n        throw \"Desired cron format (\".concat(this.cronFormat, \") is not available\");\n      } //On model changes, update our state to reflect the user's input\n\n\n      $scope.$watch('$ctrl.ngModel', function (cron) {\n        return _this.handleModelChange(cron);\n      }); // Watch for option changes\n\n      $scope.$watch('$ctrl.options', this.optionsChanged.bind(this), true);\n    }\n\n    _createClass(CronGenComponent, [{\n      key: \"$onInit\",\n      value: function $onInit() {\n        var _this2 = this;\n\n        //If possible, add our cron expression validator to our form\n        if (this.formCtrl && this.name) {\n          this.ngModelCtrl.$validators.testCronExpr = function (expression) {\n            return _this2.cronGenService.isValid(_this2.cronFormat, expression);\n          };\n        }\n      }\n    }, {\n      key: \"optionsChanged\",\n      value: function optionsChanged(options) {\n        this.parsedOptions = this.mergeDefaultOptions(options);\n        this.translate.use(this.parsedOptions.language);\n      }\n    }, {\n      key: \"setActiveTab\",\n      value: function setActiveTab($event, tab) {\n        $event.preventDefault();\n\n        if (!this.ngDisabled) {\n          this.activeTab = tab;\n          this.regenerateCron();\n        }\n      }\n    }, {\n      key: \"dayDisplay\",\n      value: function dayDisplay(day) {\n        switch (day) {\n          case \"SUN\":\n            return this.filter('translate')('SUNDAY');\n\n          case \"MON\":\n            return this.filter('translate')('MONDAY');\n\n          case \"TUE\":\n            return this.filter('translate')('TUESDAY');\n\n          case \"WED\":\n            return this.filter('translate')('WEDNESDAY');\n\n          case \"THU\":\n            return this.filter('translate')('THURSDAY');\n\n          case \"FRI\":\n            return this.filter('translate')('FRIDAY');\n\n          case \"SAT\":\n            return this.filter('translate')('SATURDAY');\n        }\n      }\n    }, {\n      key: \"monthWeekDisplay\",\n      value: function monthWeekDisplay(monthWeekNumber) {\n        switch (monthWeekNumber) {\n          case \"#1\":\n            return this.filter('translate')('FIRST');\n\n          case \"#2\":\n            return this.filter('translate')('SECOND');\n\n          case \"#3\":\n            return this.filter('translate')('THIRD');\n\n          case \"#4\":\n            return this.filter('translate')('FOURTH');\n\n          case \"#5\":\n            return this.filter('translate')('FIFTH');\n\n          case \"L\":\n            return this.filter('translate')('LAST');\n        }\n      }\n    }, {\n      key: \"monthDisplay\",\n      value: function monthDisplay(monthNumber) {\n        switch (monthNumber) {\n          case 1:\n            return this.filter('translate')('JANUARY');\n\n          case 2:\n            return this.filter('translate')('FEBRUARY');\n\n          case 3:\n            return this.filter('translate')('MARCH');\n\n          case 4:\n            return this.filter('translate')('APRIL');\n\n          case 5:\n            return this.filter('translate')('MAY');\n\n          case 6:\n            return this.filter('translate')('JUNE');\n\n          case 7:\n            return this.filter('translate')('JULY');\n\n          case 8:\n            return this.filter('translate')('AUGUST');\n\n          case 9:\n            return this.filter('translate')('SEPTEMBER');\n\n          case 10:\n            return this.filter('translate')('OCTOBER');\n\n          case 11:\n            return this.filter('translate')('NOVEMBER');\n\n          case 12:\n            return this.filter('translate')('DECEMBER');\n        }\n      }\n    }, {\n      key: \"monthDayDisplay\",\n      value: function monthDayDisplay(monthDay) {\n        if (monthDay === 'L') {\n          return this.filter('translate')('LAST_DAY');\n        } else if (monthDay === 'LW') {\n          return this.filter('translate')('LAST_WEEKDAY');\n        } else if (monthDay === '1W') {\n          return this.filter('translate')('FIRST_WEEKDAY');\n        } else {\n          return \"\".concat(monthDay).concat(this.cronGenService.appendInt(monthDay), \" \").concat(this.filter('translate')('DAY'));\n        }\n      }\n    }, {\n      key: \"processHour\",\n      value: function processHour(hours) {\n        if (this.parsedOptions.use24HourTime) {\n          return hours;\n        } else {\n          return (hours + 11) % 12 + 1;\n        }\n      }\n    }, {\n      key: \"getHourType\",\n      value: function getHourType(hours) {\n        return this.parsedOptions.use24HourTime ? null : hours >= 12 ? 'PM' : 'AM';\n      }\n    }, {\n      key: \"hourToCron\",\n      value: function hourToCron(hour, hourType) {\n        if (this.parsedOptions.use24HourTime) {\n          return hour;\n        } else {\n          return hourType === 'AM' ? hour === 12 ? 0 : hour : hour === 12 ? 12 : hour + 12;\n        }\n      }\n    }, {\n      key: \"mergeDefaultOptions\",\n      value: function mergeDefaultOptions(options) {\n        return angular.extend({\n          formInputClass: 'form-control cron-gen-input',\n          formSelectClass: 'form-control cron-gen-select',\n          formRadioClass: 'cron-gen-radio',\n          formCheckboxClass: 'cron-gen-checkbox',\n          hideMinutesTab: true,\n          hideHourlyTab: true,\n          hideDailyTab: false,\n          hideWeeklyTab: false,\n          hideMonthlyTab: false,\n          hideYearlyTab: false,\n          hideAdvancedTab: true,\n          use24HourTime: true,\n          hideSeconds: true,\n          language: 'en'\n        }, options);\n      }\n    }, {\n      key: \"regenerateCron\",\n      value: function regenerateCron() {\n        var _this3 = this;\n\n        this.currentState = States.DIRTY;\n\n        switch (this.cronFormat) {\n          case 'quartz':\n            switch (this.activeTab) {\n              case 'minutes':\n                this.ngModel = \"\".concat(this.state.minutes.seconds, \" 0/\").concat(this.state.minutes.minutes, \" * 1/1 * ? *\");\n                break;\n\n              case 'hourly':\n                this.ngModel = \"\".concat(this.state.hourly.seconds, \" \").concat(this.state.hourly.minutes, \" 0/\").concat(this.state.hourly.hours, \" 1/1 * ? *\");\n                break;\n\n              case 'daily':\n                switch (this.state.daily.subTab) {\n                  case 'everyDays':\n                    this.ngModel = \"\".concat(this.state.daily.everyDays.seconds, \" \").concat(this.state.daily.everyDays.minutes, \" \").concat(this.hourToCron(this.state.daily.everyDays.hours, this.state.daily.everyDays.hourType), \" 1/\").concat(this.state.daily.everyDays.days, \" * ? *\");\n                    break;\n\n                  case 'everyWeekDay':\n                    this.ngModel = \"\".concat(this.state.daily.everyWeekDay.seconds, \" \").concat(this.state.daily.everyWeekDay.minutes, \" \").concat(this.hourToCron(this.state.daily.everyWeekDay.hours, this.state.daily.everyWeekDay.hourType), \" ? * MON-FRI *\");\n                    break;\n\n                  default:\n                    throw 'Invalid cron daily subtab selection';\n                }\n\n                break;\n\n              case 'weekly':\n                var days = this.selectOptions.days.reduce(function (acc, day) {\n                  return _this3.state.weekly[day] ? acc.concat([day]) : acc;\n                }, []).join(',');\n                this.ngModel = \"\".concat(this.state.weekly.seconds, \" \").concat(this.state.weekly.minutes, \" \").concat(this.hourToCron(this.state.weekly.hours, this.state.weekly.hourType), \" ? * \").concat(days, \" *\");\n                break;\n\n              case 'monthly':\n                switch (this.state.monthly.subTab) {\n                  case 'specificDay':\n                    this.ngModel = \"\".concat(this.state.monthly.specificDay.seconds, \" \").concat(this.state.monthly.specificDay.minutes, \" \").concat(this.hourToCron(this.state.monthly.specificDay.hours, this.state.monthly.specificDay.hourType), \" \").concat(this.state.monthly.specificDay.day, \" 1/\").concat(this.state.monthly.specificDay.months, \" ? *\");\n                    break;\n\n                  case 'specificWeekDay':\n                    this.ngModel = \"\".concat(this.state.monthly.specificWeekDay.seconds, \" \").concat(this.state.monthly.specificWeekDay.minutes, \" \").concat(this.hourToCron(this.state.monthly.specificWeekDay.hours, this.state.monthly.specificWeekDay.hourType), \" ? 1/\").concat(this.state.monthly.specificWeekDay.months, \" \").concat(this.state.monthly.specificWeekDay.day).concat(this.state.monthly.specificWeekDay.monthWeek, \" *\");\n                    break;\n\n                  default:\n                    throw 'Invalid cron monthly subtab selection';\n                }\n\n                break;\n\n              case 'yearly':\n                switch (this.state.yearly.subTab) {\n                  case 'specificMonthDay':\n                    this.ngModel = \"\".concat(this.state.yearly.specificMonthDay.seconds, \" \").concat(this.state.yearly.specificMonthDay.minutes, \" \").concat(this.hourToCron(this.state.yearly.specificMonthDay.hours, this.state.yearly.specificMonthDay.hourType), \" \").concat(this.state.yearly.specificMonthDay.day, \" \").concat(this.state.yearly.specificMonthDay.month, \" ? *\");\n                    break;\n\n                  case 'specificMonthWeek':\n                    this.ngModel = \"\".concat(this.state.yearly.specificMonthWeek.seconds, \" \").concat(this.state.yearly.specificMonthWeek.minutes, \" \").concat(this.hourToCron(this.state.yearly.specificMonthWeek.hours, this.state.yearly.specificMonthWeek.hourType), \" ? \").concat(this.state.yearly.specificMonthWeek.month, \" \").concat(this.state.yearly.specificMonthWeek.day).concat(this.state.yearly.specificMonthWeek.monthWeek, \" *\");\n                    break;\n\n                  default:\n                    throw 'Invalid cron yearly subtab selection';\n                }\n\n                break;\n\n              case 'advanced':\n                this.ngModel = this.state.advanced.expression;\n                break;\n\n              default:\n                throw 'Invalid cron active tab selection';\n            }\n\n          case 'unix':\n            switch (this.activeTab) {\n              case 'daily':\n                switch (this.state.daily.subTab) {\n                  case 'everyDays':\n                    this.ngModel = \"\".concat(this.state.daily.everyDays.minutes, \" \").concat(this.hourToCron(this.state.daily.everyDays.hours, this.state.daily.everyDays.hourType), \" */\").concat(this.state.daily.everyDays.days, \" * *\");\n                    break;\n\n                  case 'everyWeekDay':\n                    this.ngModel = \"\".concat(this.state.daily.everyWeekDay.minutes, \" \").concat(this.hourToCron(this.state.daily.everyWeekDay.hours, this.state.daily.everyWeekDay.hourType), \" * * 1-5\");\n                    break;\n\n                  default:\n                    throw 'Invalid cron daily subtab selection';\n                }\n\n                break;\n\n              case 'weekly':\n                var _days = this.selectOptions.days.reduce(function (acc, day) {\n                  return _this3.state.weekly[day] ? acc.concat([day]) : acc;\n                }, []).join(',');\n\n                this.ngModel = \"\".concat(this.state.weekly.minutes, \" \").concat(this.hourToCron(this.state.weekly.hours, this.state.weekly.hourType), \" * * \").concat(_days);\n                break;\n\n              case 'monthly':\n                switch (this.state.monthly.subTab) {\n                  case 'specificDay':\n                    this.ngModel = \"\".concat(this.state.monthly.specificDay.minutes, \" \").concat(this.hourToCron(this.state.monthly.specificDay.hours, this.state.monthly.specificDay.hourType), \" \").concat(this.state.monthly.specificDay.day, \" */\").concat(this.state.monthly.specificDay.months, \" *\");\n                    break;\n\n                  default:\n                    throw 'Invalid cron monthly subtab selection';\n                }\n\n                break;\n\n              case 'yearly':\n                switch (this.state.yearly.subTab) {\n                  case 'specificMonthDay':\n                    this.ngModel = \"\".concat(this.state.yearly.specificMonthDay.minutes, \" \").concat(this.hourToCron(this.state.yearly.specificMonthDay.hours, this.state.yearly.specificMonthDay.hourType), \" \").concat(this.state.yearly.specificMonthDay.day, \" \").concat(this.state.yearly.specificMonthDay.month, \" *\");\n                    break;\n\n                  default:\n                    throw 'Invalid cron yearly subtab selection';\n                }\n\n                break;\n\n              case 'advanced':\n                this.ngModel = this.state.advanced.expression;\n                break;\n\n              default:\n                throw 'Invalid cron active tab selection';\n            }\n\n        }\n      }\n    }, {\n      key: \"handleModelChange\",\n      value: function handleModelChange(cron) {\n        var _this4 = this;\n\n        if (this.currentState === States.DIRTY) {\n          this.currentState = States.CLEAN;\n          return;\n        } else {\n          this.currentState = States.CLEAN;\n        }\n\n        if (!cron) {\n          return;\n        }\n\n        var segments = cron.split(' ');\n\n        if (this.cronFormat === 'quartz' && (segments.length === 6 || segments.length === 7)) {\n          var _segments = _slicedToArray(segments, 6),\n              seconds = _segments[0],\n              minutes = _segments[1],\n              hours = _segments[2],\n              dayOfMonth = _segments[3],\n              month = _segments[4],\n              dayOfWeek = _segments[5];\n\n          if (cron.match(/\\d+ 0\\/\\d+ \\* 1\\/1 \\* \\? \\*/)) {\n            this.activeTab = 'minutes';\n            this.state.minutes.minutes = parseInt(minutes.substring(2));\n            this.state.minutes.seconds = parseInt(seconds);\n          } else if (cron.match(/\\d+ \\d+ 0\\/\\d+ 1\\/1 \\* \\? \\*/)) {\n            this.activeTab = 'hourly';\n            this.state.hourly.hours = parseInt(hours.substring(2));\n            this.state.hourly.minutes = parseInt(minutes);\n            this.state.hourly.seconds = parseInt(seconds);\n          } else if (cron.match(/\\d+ \\d+ \\d+ 1\\/\\d+ \\* \\? \\*/)) {\n            this.activeTab = 'daily';\n            this.state.daily.subTab = 'everyDays';\n            this.state.daily.everyDays.days = parseInt(dayOfMonth.substring(2));\n            var parsedHours = parseInt(hours);\n            this.state.daily.everyDays.hours = this.processHour(parsedHours);\n            this.state.daily.everyDays.hourType = this.getHourType(parsedHours);\n            this.state.daily.everyDays.minutes = parseInt(minutes);\n            this.state.daily.everyDays.seconds = parseInt(seconds);\n          } else if (cron.match(/\\d+ \\d+ \\d+ \\? \\* MON-FRI \\*/)) {\n            this.activeTab = 'daily';\n            this.state.daily.subTab = 'everyWeekDay';\n\n            var _parsedHours = parseInt(hours);\n\n            this.state.daily.everyWeekDay.hours = this.processHour(_parsedHours);\n            this.state.daily.everyWeekDay.hourType = this.getHourType(_parsedHours);\n            this.state.daily.everyWeekDay.minutes = parseInt(minutes);\n            this.state.daily.everyWeekDay.seconds = parseInt(seconds);\n          } else if (cron.match(/\\d+ \\d+ \\d+ \\? \\* (MON|TUE|WED|THU|FRI|SAT|SUN)(,(MON|TUE|WED|THU|FRI|SAT|SUN))* \\*/)) {\n            this.activeTab = 'weekly';\n            this.selectOptions.days.forEach(function (weekDay) {\n              return _this4.state.weekly[weekDay] = false;\n            });\n            dayOfWeek.split(',').forEach(function (weekDay) {\n              return _this4.state.weekly[weekDay] = true;\n            });\n\n            var _parsedHours2 = parseInt(hours);\n\n            this.state.weekly.hours = this.processHour(_parsedHours2);\n            this.state.weekly.hourType = this.getHourType(_parsedHours2);\n            this.state.weekly.minutes = parseInt(minutes);\n            this.state.weekly.seconds = parseInt(seconds);\n          } else if (cron.match(/\\d+ \\d+ \\d+ (\\d+|L|LW|1W) 1\\/\\d+ \\? \\*/)) {\n            this.activeTab = 'monthly';\n            this.state.monthly.subTab = 'specificDay';\n            this.state.monthly.specificDay.day = dayOfMonth;\n            this.state.monthly.specificDay.months = parseInt(month.substring(2));\n\n            var _parsedHours3 = parseInt(hours);\n\n            this.state.monthly.specificDay.hours = this.processHour(_parsedHours3);\n            this.state.monthly.specificDay.hourType = this.getHourType(_parsedHours3);\n            this.state.monthly.specificDay.minutes = parseInt(minutes);\n            this.state.monthly.specificDay.seconds = parseInt(seconds);\n          } else if (cron.match(/\\d+ \\d+ \\d+ \\? 1\\/\\d+ (MON|TUE|WED|THU|FRI|SAT|SUN)((#[1-5])|L) \\*/)) {\n            var day = dayOfWeek.substr(0, 3);\n            var monthWeek = dayOfWeek.substr(3);\n            this.activeTab = 'monthly';\n            this.state.monthly.subTab = 'specificWeekDay';\n            this.state.monthly.specificWeekDay.monthWeek = monthWeek;\n            this.state.monthly.specificWeekDay.day = day;\n            this.state.monthly.specificWeekDay.months = parseInt(month.substring(2));\n\n            var _parsedHours4 = parseInt(hours);\n\n            this.state.monthly.specificWeekDay.hours = this.processHour(_parsedHours4);\n            this.state.monthly.specificWeekDay.hourType = this.getHourType(_parsedHours4);\n            this.state.monthly.specificWeekDay.minutes = parseInt(minutes);\n            this.state.monthly.specificWeekDay.seconds = parseInt(seconds);\n          } else if (cron.match(/\\d+ \\d+ \\d+ (\\d+|L|LW|1W) \\d+ \\? \\*/)) {\n            this.activeTab = 'yearly';\n            this.state.yearly.subTab = 'specificMonthDay';\n            this.state.yearly.specificMonthDay.month = parseInt(month);\n            this.state.yearly.specificMonthDay.day = dayOfMonth;\n\n            var _parsedHours5 = parseInt(hours);\n\n            this.state.yearly.specificMonthDay.hours = this.processHour(_parsedHours5);\n            this.state.yearly.specificMonthDay.hourType = this.getHourType(_parsedHours5);\n            this.state.yearly.specificMonthDay.minutes = parseInt(minutes);\n            this.state.yearly.specificMonthDay.seconds = parseInt(seconds);\n          } else if (cron.match(/\\d+ \\d+ \\d+ \\? \\d+ (MON|TUE|WED|THU|FRI|SAT|SUN)((#[1-5])|L) \\*/)) {\n            var _day = dayOfWeek.substr(0, 3);\n\n            var _monthWeek = dayOfWeek.substr(3);\n\n            this.activeTab = 'yearly';\n            this.state.yearly.subTab = 'specificMonthWeek';\n            this.state.yearly.specificMonthWeek.monthWeek = _monthWeek;\n            this.state.yearly.specificMonthWeek.day = _day;\n            this.state.yearly.specificMonthWeek.month = parseInt(month);\n\n            var _parsedHours6 = parseInt(hours);\n\n            this.state.yearly.specificMonthWeek.hours = this.processHour(_parsedHours6);\n            this.state.yearly.specificMonthWeek.hourType = this.getHourType(_parsedHours6);\n            this.state.yearly.specificMonthWeek.minutes = parseInt(minutes);\n            this.state.yearly.specificMonthWeek.seconds = parseInt(seconds);\n          } else {\n            this.activeTab = 'advanced';\n            this.state.advanced.expression = cron;\n          }\n        } else if (this.cronFormat === 'unix' && segments.length === 5) {\n          var _segments2 = _slicedToArray(segments, 5),\n              _minutes = _segments2[0],\n              _hours = _segments2[1],\n              _dayOfMonth = _segments2[2],\n              _month = _segments2[3],\n              _dayOfWeek = _segments2[4];\n\n          if (cron.match(/\\d+ \\d+ \\*\\/\\d+ \\* \\*/)) {\n            this.activeTab = 'daily';\n            this.state.daily.subTab = 'everyDays';\n            this.state.daily.everyDays.days = parseInt(_dayOfMonth.substring(2));\n\n            var _parsedHours7 = parseInt(_hours);\n\n            this.state.daily.everyDays.hours = this.processHour(_parsedHours7);\n            this.state.daily.everyDays.hourType = this.getHourType(_parsedHours7);\n            this.state.daily.everyDays.minutes = parseInt(_minutes);\n            this.state.daily.everyDays.seconds = 0;\n          } else if (cron.match(/\\d+ \\d+ \\* \\* MON-FRI/)) {\n            this.activeTab = 'daily';\n            this.state.daily.subTab = 'everyWeekDay';\n\n            var _parsedHours8 = parseInt(_hours);\n\n            this.state.daily.everyWeekDay.hours = this.processHour(_parsedHours8);\n            this.state.daily.everyWeekDay.hourType = this.getHourType(_parsedHours8);\n            this.state.daily.everyWeekDay.minutes = parseInt(_minutes);\n            this.state.daily.everyWeekDay.seconds = 0;\n          } else if (cron.match(/\\d+ \\d+ \\* \\* (MON|TUE|WED|THU|FRI|SAT|SUN)(,(MON|TUE|WED|THU|FRI|SAT|SUN))*/)) {\n            this.activeTab = 'weekly';\n            this.selectOptions.days.forEach(function (weekDay) {\n              return _this4.state.weekly[weekDay] = false;\n            });\n\n            _dayOfWeek.split(',').forEach(function (weekDay) {\n              return _this4.state.weekly[weekDay] = true;\n            });\n\n            var _parsedHours9 = parseInt(_hours);\n\n            this.state.weekly.hours = this.processHour(_parsedHours9);\n            this.state.weekly.hourType = this.getHourType(_parsedHours9);\n            this.state.weekly.minutes = parseInt(_minutes);\n            this.state.weekly.seconds = 0;\n          } else if (cron.match(/\\d+ \\d+ \\d+ 1\\/\\d+ \\*/)) {\n            this.activeTab = 'monthly';\n            this.state.monthly.subTab = 'specificDay';\n            this.state.monthly.specificDay.day = _dayOfMonth;\n            this.state.monthly.specificDay.months = parseInt(_month.substring(2));\n\n            var _parsedHours10 = parseInt(_hours);\n\n            this.state.monthly.specificDay.hours = this.processHour(_parsedHours10);\n            this.state.monthly.specificDay.hourType = this.getHourType(_parsedHours10);\n            this.state.monthly.specificDay.minutes = parseInt(_minutes);\n            this.state.monthly.specificDay.seconds = 0;\n          } else if (cron.match(/\\d+ \\d+ \\d+ \\d+ \\*/)) {\n            this.activeTab = 'yearly';\n            this.state.yearly.subTab = 'specificMonthDay';\n            this.state.yearly.specificMonthDay.month = parseInt(_month);\n            this.state.yearly.specificMonthDay.day = _dayOfMonth;\n\n            var _parsedHours11 = parseInt(_hours);\n\n            this.state.yearly.specificMonthDay.hours = this.processHour(_parsedHours11);\n            this.state.yearly.specificMonthDay.hourType = this.getHourType(_parsedHours11);\n            this.state.yearly.specificMonthDay.minutes = parseInt(_minutes);\n            this.state.yearly.specificMonthDay.seconds = 0;\n          } else {\n            this.activeTab = 'advanced';\n            this.state.advanced.expression = cron;\n          }\n        } else {\n          throw 'Unsupported cron expression. Expression must be 6 or 7 segments';\n        }\n      }\n    }]);\n\n    return CronGenComponent;\n  }();\n\n  var QUARTZ_REGEX = /^\\s*($|#|\\w+\\s*=|(\\?|\\*|(?:[0-5]?\\d)(?:(?:-|\\/|\\,)(?:[0-5]?\\d))?(?:,(?:[0-5]?\\d)(?:(?:-|\\/|\\,)(?:[0-5]?\\d))?)*)\\s+(\\?|\\*|(?:[0-5]?\\d)(?:(?:-|\\/|\\,)(?:[0-5]?\\d))?(?:,(?:[0-5]?\\d)(?:(?:-|\\/|\\,)(?:[0-5]?\\d))?)*)\\s+(\\?|\\*|(?:[01]?\\d|2[0-3])(?:(?:-|\\/|\\,)(?:[01]?\\d|2[0-3]))?(?:,(?:[01]?\\d|2[0-3])(?:(?:-|\\/|\\,)(?:[01]?\\d|2[0-3]))?)*)\\s+(\\?|\\*|(?:0?[1-9]|[12]\\d|3[01])(?:(?:-|\\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?(?:,(?:0?[1-9]|[12]\\d|3[01])(?:(?:-|\\/|\\,)(?:0?[1-9]|[12]\\d|3[01]))?)*)\\s+(\\?|\\*|(?:[1-9]|1[012])(?:(?:-|\\/|\\,)(?:[1-9]|1[012]))?(?:L|W)?(?:,(?:[1-9]|1[012])(?:(?:-|\\/|\\,)(?:[1-9]|1[012]))?(?:L|W)?)*|\\?|\\*|(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?(?:,(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(?:(?:-)(?:JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC))?)*)\\s+(\\?|\\*|(?:[1-7]|MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-|\\/|\\,|#)(?:[1-5]))?(?:L)?(?:,(?:[1-7]|MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-|\\/|\\,|#)(?:[1-5]))?(?:L)?)*|\\?|\\*|(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?(?:,(?:MON|TUE|WED|THU|FRI|SAT|SUN)(?:(?:-)(?:MON|TUE|WED|THU|FRI|SAT|SUN))?)*)(|\\s)+(\\?|\\*|(?:|\\d{4})(?:(?:-|\\/|\\,)(?:|\\d{4}))?(?:,(?:|\\d{4})(?:(?:-|\\/|\\,)(?:|\\d{4}))?)*))$/;\n  var CronGenService = /*#__PURE__*/function () {\n    function CronGenService($filter) {\n      _classCallCheck(this, CronGenService);\n\n      this.filter = $filter;\n    }\n\n    _createClass(CronGenService, [{\n      key: \"isValid\",\n      value: function isValid(cronFormat, expression) {\n        if (!expression) {\n          return false;\n        }\n\n        var formattedExpression = expression.toUpperCase();\n\n        switch (cronFormat) {\n          case 'quartz':\n            return !!formattedExpression.match(QUARTZ_REGEX);\n\n          case 'unix':\n            return true;\n\n          default:\n            throw \"Desired cron format (\".concat(cronFormat, \") is not available\");\n        }\n      }\n    }, {\n      key: \"appendInt\",\n      value: function appendInt(number) {\n        var value = \"\".concat(number);\n\n        if (value.length > 1) {\n          var secondToLastDigit = value.charAt(value.length - 2);\n\n          if (secondToLastDigit === '1') {\n            return this.filter('translate')('CARDINAL_PREFIX');\n          }\n        }\n\n        var lastDigit = value.charAt(value.length - 1);\n\n        switch (lastDigit) {\n          case '1':\n            return this.filter('translate')('FIRST_PREFIX');\n\n          case '2':\n            return this.filter('translate')('SECOND_PREFIX');\n\n          case '3':\n            return this.filter('translate')('THIRD_PREFIX');\n\n          default:\n            return this.filter('translate')('CARDINAL_PREFIX');\n        }\n      }\n    }, {\n      key: \"padNumber\",\n      value: function padNumber(number) {\n        return \"\".concat(number).length === 1 ? \"0\".concat(number) : \"\".concat(number);\n      }\n    }, {\n      key: \"range\",\n      value: function range(start, end) {\n        if (typeof end === 'undefined') {\n          end = start;\n          start = 0;\n        }\n\n        if (start < 0 || end < 0) throw 'Range values must be positive values';\n\n        if (end > start) {\n          return _toConsumableArray(new Array(end - start)).map(function (val, idx) {\n            return idx + start;\n          });\n        } else if (start < end) {\n          return _toConsumableArray(new Array(start - end)).map(function (val, idx) {\n            return end - idx;\n          });\n        } else {\n          return [];\n        }\n      }\n    }, {\n      key: \"selectOptions\",\n      value: function selectOptions() {\n        return {\n          months: this.range(1, 13),\n          monthWeeks: ['#1', '#2', '#3', '#4', '#5', 'L'],\n          days: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'],\n          minutes: this.range(1, 60),\n          fullMinutes: this.range(60),\n          seconds: this.range(60),\n          hours: this.range(1, 24),\n          monthDays: this.range(1, 32),\n          monthDaysWithLasts: _toConsumableArray(_toConsumableArray(new Array(31)).map(function (val, idx) {\n            return \"\".concat(idx + 1);\n          }))\n        };\n      }\n    }]);\n\n    return CronGenService;\n  }();\n\n  var CronGenTimeSelect = function CronGenTimeSelect($scope, cronGenService) {\n    'ngInject';\n\n    var _this = this;\n\n    _classCallCheck(this, CronGenTimeSelect);\n\n    this.cronGenService = cronGenService;\n    this.selectOptions = {\n      minutes: cronGenService.range(60),\n      seconds: cronGenService.range(60),\n      hourTypes: ['AM', 'PM']\n    };\n    $scope.$watch('$ctrl.use24HourTime', function () {\n      _this.selectOptions.hours = _this.use24HourTime ? _this.cronGenService.range(24) : _this.cronGenService.range(1, 13);\n    });\n  };\n\n  angular.module('angular-cron-gen', ['pascalprecht.translate']).config(function ($translateProvider) {\n    $translateProvider.translations('en', {\n      'MINUTES': 'Minutes',\n      'HOURLY': 'Hourly',\n      'DAILY': 'Daily',\n      'WEEKLY': 'Weekly',\n      'MONTHLY': 'Monthly',\n      'YEARLY': 'Yearly',\n      'ADVANCED': 'Advanced',\n      'EVERY': 'Every',\n      'EVERY_MONTH': 'Every',\n      'MINUTE': 'minute(s)',\n      'ON_SECOND': 'on second',\n      'HOUR_ON_MINUTE': 'hour(s) on minute',\n      'AND_SECOND': 'and second',\n      'DAY_AT': 'day(s) at',\n      'EVERY_WEEK_WORKING_DAY': 'Every week day (Monday through Friday) at',\n      'MONDAY': 'Monday',\n      'TUESDAY': 'Tuesday',\n      'WEDNESDAY': 'Wednesday',\n      'THURSDAY': 'Thursday',\n      'FRIDAY': 'Friday',\n      'SATURDAY': 'Saturday',\n      'SUNDAY': 'Sunday',\n      'START_TIME': 'Start time',\n      'ON_THE': 'On the',\n      'ON_THE_SMALL': 'on the',\n      'OF_EVERY': 'of every',\n      'MONTHS_AT': 'month(s) at',\n      'AT': 'at',\n      'OF': 'of',\n      'CRON_EXPRESSION': 'Cron Expression',\n      'MORE_DETAILS': 'More details about how to create these expressions can be found',\n      'HERE': 'here',\n      'LAST_DAY': 'Last day',\n      'LAST_WEEKDAY': 'Last Weekday',\n      'FIRST_WEEKDAY': 'First Weekday',\n      'DAY': 'Day',\n      'FIRST_PREFIX': 'st',\n      'SECOND_PREFIX': 'nd',\n      'THIRD_PREFIX': 'rd',\n      'CARDINAL_PREFIX': 'th',\n      'FIRST': 'First',\n      'SECOND': 'Second',\n      'THIRD': 'Third',\n      'FOURTH': 'Fourth',\n      'FIFTH': 'Fifth',\n      'LAST': 'Last',\n      'JANUARY': 'January',\n      'FEBRUARY': 'February',\n      'MARCH': 'March',\n      'APRIL': 'April',\n      'MAY': 'May',\n      'JUNE': 'June',\n      'JULY': 'July',\n      'AUGUST': 'August',\n      'SEPTEMBER': 'September',\n      'OCTOBER': 'October',\n      'NOVEMBER': 'November',\n      'DECEMBER': 'December'\n    }).translations('it', {\n      'MINUTES': 'Minuti',\n      'HOURLY': 'Orario',\n      'DAILY': 'Giornaliero',\n      'WEEKLY': 'Settimanale',\n      'MONTHLY': 'Mensile',\n      'YEARLY': 'Annuale',\n      'ADVANCED': 'Avanzato',\n      'EVERY': 'Ogni',\n      'EVERY_MONTH': 'Ogni',\n      'MINUTE': 'minuto/i',\n      'ON_SECOND': 'al secondo',\n      'HOUR_ON_MINUTE': 'ora/e al minuto',\n      'AND_SECOND': 'e secondi',\n      'DAY_AT': 'giorno/i alle',\n      'EVERY_WEEK_WORKING_DAY': \"Ogni giorno della settimana (dal Lunedi' al Venerdi') alle\",\n      'MONDAY': \"Lunedi'\",\n      'TUESDAY': \"Martedi'\",\n      'WEDNESDAY': \"Mercoledi'\",\n      'THURSDAY': \"Giovedi'\",\n      'FRIDAY': \"Venerdi'\",\n      'SATURDAY': 'Sabato',\n      'SUNDAY': 'Domenica',\n      'START_TIME': 'Inizio alle',\n      'ON_THE': 'Il',\n      'ON_THE_SMALL': 'il',\n      'OF_EVERY': 'di ogni',\n      'MONTHS_AT': 'mese/i il',\n      'AT': 'il',\n      'OF': 'di',\n      'CRON_EXPRESSION': 'Sintassi Cron',\n      'MORE_DETAILS': 'Maggiori informazioni sulla sintassi Cron li potete trovare',\n      'HERE': 'qui',\n      'LAST_DAY': 'Ultimo giorno',\n      'LAST_WEEKDAY': 'Fine settimana',\n      'FIRST_WEEKDAY': 'Inizio settimana',\n      'DAY': 'Giorno',\n      'FIRST_PREFIX': '',\n      'SECOND_PREFIX': '',\n      'THIRD_PREFIX': '',\n      'CARDINAL_PREFIX': '',\n      'FIRST': 'Primo',\n      'SECOND': 'Secondo',\n      'THIRD': 'Terzo',\n      'FOURTH': 'Quarto',\n      'FIFTH': 'Quinto',\n      'LAST': 'Ultimo',\n      'JANUARY': 'Gennaio',\n      'FEBRUARY': 'Febbraio',\n      'MARCH': 'Marzo',\n      'APRIL': 'Aprile',\n      'MAY': 'Maggio',\n      'JUNE': 'Giugno',\n      'JULY': 'Luglio',\n      'AUGUST': 'Agosto',\n      'SEPTEMBER': 'Settembre',\n      'OCTOBER': 'Ottobre',\n      'NOVEMBER': 'Novembre',\n      'DECEMBER': 'Dicembre'\n    }).translations('de', {\n      'MINUTES': 'Minütlich',\n      'HOURLY': 'Stündlich',\n      'DAILY': 'Täglich',\n      'WEEKLY': 'Wöchentlich',\n      'MONTHLY': 'Monatlich',\n      'YEARLY': 'Jährlich',\n      'ADVANCED': 'Cron Ausdruck',\n      'EVERY': 'Alle',\n      'EVERY_MONTH': 'Jeden',\n      'MINUTE': 'Minute(n)',\n      'ON_SECOND': 'auf Sekunde',\n      'HOUR_ON_MINUTE': 'Stunde(n) auf Minute',\n      'AND_SECOND': 'und Sekunde',\n      'DAY_AT': 'Tag(e) um',\n      'EVERY_WEEK_WORKING_DAY': \"Jeden Wochentag (Montag bis Freitag) um\",\n      'MONDAY': \"Montag\",\n      'TUESDAY': \"Dienstag\",\n      'WEDNESDAY': \"Mittwoch\",\n      'THURSDAY': \"Donnerstag\",\n      'FRIDAY': \"Freitag\",\n      'SATURDAY': 'Samstag',\n      'SUNDAY': 'Sonntag',\n      'START_TIME': 'Startzeit',\n      'ON_THE': 'Am',\n      'ON_THE_SMALL': 'am',\n      'OF_EVERY': 'alle',\n      'MONTHS_AT': 'Monat(e) um',\n      'AT': 'um',\n      'OF': 'im',\n      'CRON_EXPRESSION': 'Cron Ausdruck',\n      'MORE_DETAILS': 'Weitere Informationen zum Erstellen dieser Ausdrücke finden Sie ',\n      'HERE': 'hier',\n      'LAST_DAY': 'letzter Tag',\n      'LAST_WEEKDAY': 'letzter Wochentag',\n      'FIRST_WEEKDAY': 'erster Wochentag',\n      'DAY': 'Tag',\n      'FIRST_PREFIX': '',\n      'SECOND_PREFIX': '',\n      'THIRD_PREFIX': '',\n      'CARDINAL_PREFIX': '',\n      'FIRST': 'Ersten',\n      'SECOND': 'Zweiten',\n      'THIRD': 'Dritten',\n      'FOURTH': 'Vierten',\n      'FIFTH': 'Fünften',\n      'LAST': 'Letzten',\n      'JANUARY': 'Januar',\n      'FEBRUARY': 'Februar',\n      'MARCH': 'März',\n      'APRIL': 'April',\n      'MAY': 'Mai',\n      'JUNE': 'Juni',\n      'JULY': 'Juli',\n      'AUGUST': 'August',\n      'SEPTEMBER': 'September',\n      'OCTOBER': 'Oktober',\n      'NOVEMBER': 'November',\n      'DECEMBER': 'Dezember'\n    }).translations('fr', {\n      'MINUTES': 'Minutes',\n      'HOURLY': 'Heures',\n      'DAILY': 'Jours',\n      'WEEKLY': 'Semaines',\n      'MONTHLY': 'Mois',\n      'YEARLY': 'Années',\n      'ADVANCED': 'Avancée',\n      'EVERY': 'Chaque',\n      'EVERY_MONTH': 'Chaque',\n      'MINUTE': 'minute(s)',\n      'ON_SECOND': 'à la seconde',\n      'HOUR_ON_MINUTE': 'heure(s) à la minute',\n      'AND_SECOND': 'et seconde',\n      'DAY_AT': 'jours(s) à',\n      'EVERY_WEEK_WORKING_DAY': 'Chaque jour de semaine à',\n      'MONDAY': 'Lundi',\n      'TUESDAY': 'Mardi',\n      'WEDNESDAY': 'Mercredi',\n      'THURSDAY': 'Jeudi',\n      'FRIDAY': 'Vendredi',\n      'SATURDAY': 'Samedi',\n      'SUNDAY': 'Dimanche',\n      'START_TIME': 'De',\n      'ON_THE': 'Au',\n      'ON_THE_SMALL': 'au',\n      'OF_EVERY': 'de chaque',\n      'MONTHS_AT': 'mois à',\n      'AT': 'à',\n      'OF': 'de',\n      'CRON_EXPRESSION': 'Expression Cron',\n      'MORE_DETAILS': 'Plus de détails sur la génération de ces expressions',\n      'HERE': 'ici',\n      'LAST_DAY': 'Dernier jour',\n      'LAST_WEEKDAY': 'Dernier jour de la semaine',\n      'FIRST_WEEKDAY': 'Premier jour de la semaine',\n      'DAY': 'Jour',\n      'FIRST_PREFIX': 'er',\n      'SECOND_PREFIX': 'nd',\n      'THIRD_PREFIX': 'eme',\n      'CARDINAL_PREFIX': 'eme',\n      'FIRST': 'Premier',\n      'SECOND': 'Second',\n      'THIRD': 'Troisième',\n      'FOURTH': 'Quatrième',\n      'FIFTH': 'Cinquième',\n      'LAST': 'Dernier',\n      'JANUARY': 'Janvier',\n      'FEBRUARY': 'Février',\n      'MARCH': 'Mars',\n      'APRIL': 'Avril',\n      'MAY': 'Mai',\n      'JUNE': 'Juin',\n      'JULY': 'Juillet',\n      'AUGUST': 'Août',\n      'SEPTEMBER': 'Septembre',\n      'OCTOBER': 'Octobre',\n      'NOVEMBER': 'Novembre',\n      'DECEMBER': 'Décembre'\n    });\n  }).service('cronGenService', CronGenService).component('cronGenTimeSelect', {\n    bindings: {\n      isDisabled: '<',\n      onChange: '&',\n      isRequired: '<',\n      model: '=',\n      selectClass: '<',\n      use24HourTime: '<',\n      hideSeconds: '<',\n      namePrefix: '@'\n    },\n    templateUrl: 'angular-cron-gen/cron-gen-time-select.html',\n    controller: CronGenTimeSelect\n  }).component('cronGen', {\n    bindings: {\n      ngModel: '=',\n      ngDisabled: '<',\n      options: '<',\n      cronFormat: '@',\n      templateUrl: '@',\n      name: '@'\n    },\n    require: {\n      ngModelCtrl: 'ngModel',\n      ngDisabledCtrl: '?ngDisabled',\n      formCtrl: '^?form'\n    },\n    templateUrl: function templateUrl($attrs) {\n      'ngInject';\n\n      return $attrs.templateUrl || 'angular-cron-gen/cron-gen.html';\n    },\n    controller: CronGenComponent\n  });\n\n}());\n","angular.module('angular-cron-gen').run(['$templateCache', function($templateCache) {$templateCache.put('angular-cron-gen/cron-gen-time-select.html','<div class=\"inline-block\">\\n    <select class=\"hours\"\\n            name=\"{{namePrefix}}Hours\"\\n            ng-disabled=\"$ctrl.isDisabled\"\\n            ng-change=\"$ctrl.onChange()\"\\n            ng-required=\"$ctrl.isRequired\"\\n            ng-model=\"$ctrl.model.hours\"\\n            ng-options=\"hour as $ctrl.cronGenService.padNumber(hour) for hour in $ctrl.selectOptions.hours\"\\n            ng-class=\"$ctrl.selectClass\">\\n    </select>\\n    <select class=\"minutes\"\\n            name=\"{{namePrefix}}Minutes\"\\n            ng-disabled=\"$ctrl.isDisabled\"\\n            ng-change=\"$ctrl.onChange()\"\\n            ng-required=\"$ctrl.isRequired\"\\n            ng-model=\"$ctrl.model.minutes\"\\n            ng-options=\"minute as $ctrl.cronGenService.padNumber(minute) for minute in $ctrl.selectOptions.minutes\"\\n            ng-class=\"$ctrl.selectClass\">\\n    </select>\\n    <select class=\"seconds\"\\n            name=\"{{namePrefix}}Seconds\"\\n            ng-show=\"!$ctrl.hideSeconds\"\\n            ng-disabled=\"$ctrl.isDisabled\"\\n            ng-change=\"$ctrl.onChange()\"\\n            ng-required=\"$ctrl.isRequired\"\\n            ng-model=\"$ctrl.model.seconds\"\\n            ng-options=\"second as $ctrl.cronGenService.padNumber(second) for second in $ctrl.selectOptions.seconds\"\\n            ng-class=\"$ctrl.selectClass\">\\n    </select>\\n    <select class=\"hour-types\"\\n            name=\"{{namePrefix}}HourType\"\\n            ng-if=\"!$ctrl.use24HourTime\"\\n            ng-disabled=\"$ctrl.isDisabled\"\\n            ng-change=\"$ctrl.onChange()\"\\n            ng-model=\"$ctrl.model.hourType\"\\n            ng-options=\"hourType as hourType for hourType in $ctrl.selectOptions.hourTypes\"\\n            ng-required=\"$ctrl.isRequired\"\\n            ng-class=\"$ctrl.selectClass\">\\n    </select>\\n</div>');\n$templateCache.put('angular-cron-gen/cron-gen.html','<!doctype html>\\n<div class=\"cron-gen-main\" ng-cloak>\\n    <ul class=\"nav nav-tabs tab-nav\" role=\"tablist\">\\n        <li ng-class=\"{\\'active\\': $ctrl.activeTab === \\'minutes\\'}\"\\n            ng-show=\"!$ctrl.parsedOptions.hideMinutesTab\"\\n            role=\"presentation\">\\n            <a href=\"#\"\\n               aria-controls=\"minutes\"\\n               role=\"tab\"\\n               data-toggle=\"tab\"\\n               ng-click=\"$ctrl.setActiveTab($event, \\'minutes\\')\">\\n                {{ \\'MINUTES\\' | translate }}\\n            </a>\\n        </li>\\n        <li role=\"presentation\"\\n            ng-show=\"!$ctrl.parsedOptions.hideHourlyTab\"\\n            ng-class=\"{\\'active\\': $ctrl.activeTab === \\'hourly\\'}\">\\n            <a href=\"#\"\\n               aria-controls=\"hourly\"\\n               role=\"tab\"\\n               data-toggle=\"tab\"\\n               ng-click=\"$ctrl.setActiveTab($event, \\'hourly\\')\">\\n                {{ \\'HOURLY\\' | translate }}\\n            </a>\\n        </li>\\n        <li role=\"presentation\"\\n            ng-show=\"!$ctrl.parsedOptions.hideDailyTab\"\\n            ng-class=\"{\\'active\\': $ctrl.activeTab === \\'daily\\'}\">\\n            <a href=\"#\"\\n               aria-controls=\"daily\"\\n               role=\"tab\"\\n               data-toggle=\"tab\"\\n               ng-click=\"$ctrl.setActiveTab($event, \\'daily\\')\">\\n                {{ \\'DAILY\\' | translate }}\\n            </a>\\n        </li>\\n        <li role=\"presentation\"\\n            ng-show=\"!$ctrl.parsedOptions.hideWeeklyTab\"\\n            ng-class=\"{\\'active\\': $ctrl.activeTab === \\'weekly\\'}\">\\n            <a href=\"#\" aria-controls=\"weekly\"\\n               role=\"tab\"\\n               data-toggle=\"tab\"\\n               ng-click=\"$ctrl.setActiveTab($event, \\'weekly\\')\">\\n                {{ \\'WEEKLY\\' | translate }}\\n            </a>\\n        </li>\\n        <li role=\"presentation\"\\n            ng-show=\"!$ctrl.parsedOptions.hideMonthlyTab\"\\n            ng-class=\"{\\'active\\': $ctrl.activeTab === \\'monthly\\'}\">\\n            <a href=\"#\"\\n               aria-controls=\"monthly\"\\n               role=\"tab\"\\n               data-toggle=\"tab\"\\n               ng-click=\"$ctrl.setActiveTab($event, \\'monthly\\')\">\\n                {{ \\'MONTHLY\\' | translate }}\\n            </a>\\n        </li>\\n        <li role=\"presentation\"\\n            ng-show=\"!$ctrl.parsedOptions.hideYearlyTab\"\\n            ng-class=\"{\\'active\\': $ctrl.activeTab === \\'yearly\\'}\">\\n            <a href=\"#\"\\n               aria-controls=\"yearly\"\\n               role=\"tab\"\\n               data-toggle=\"tab\"\\n               ng-click=\"$ctrl.setActiveTab($event, \\'yearly\\')\">\\n                {{ \\'YEARLY\\' | translate }}\\n            </a>\\n        </li>\\n        <li role=\"presentation\"\\n            ng-show=\"!$ctrl.parsedOptions.hideAdvancedTab\"\\n            ng-class=\"{\\'active\\': $ctrl.activeTab === \\'advanced\\'}\">\\n            <a href=\"#\"\\n               aria-controls=\"advanced\"\\n               role=\"tab\"\\n               data-toggle=\"tab\"\\n               ng-click=\"$ctrl.setActiveTab($event, \\'advanced\\')\">\\n                {{ \\'ADVANCED\\' | translate}}\\n            </a>\\n        </li>\\n    </ul>\\n    <div class=\"cron-gen-container\">\\n        <div class=\"row\">\\n            <div class=\"col-xs-12\">\\n                <div class=\"tab-content\">\\n                    <div class=\"tab-pane\"\\n                         ng-show=\"!$ctrl.parsedOptions.hideMinutesTab\"\\n                         ng-class=\"{\\'active\\': $ctrl.activeTab === \\'minutes\\'}\">\\n                        <div class=\"well well-small\">\\n                            {{ \\'EVERY\\' | translate}}\\n                            <select class=\"minutes\"\\n                                    name=\"minutesMinutes\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'minutes\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.minutes.minutes\"\\n                                    ng-required=\"$ctrl.activeTab === \\'minutes\\'\"\\n                                    ng-options=\"minute as minute for minute in $ctrl.selectOptions.minutes\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'MINUTE\\' | translate}}\\n                            <span ng-show=\"!$ctrl.parsedOptions.hideSeconds\"> {{ \\'ON_SECOND\\' | translate }} </span>\\n                            <select class=\"seconds\"\\n                                    name=\"minutesSeconds\"\\n                                    ng-show=\"!$ctrl.parsedOptions.hideSeconds\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'minutes\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.minutes.seconds\"\\n                                    ng-required=\"$ctrl.activeTab === \\'minutes\\'\"\\n                                    ng-options=\"second as $ctrl.cronGenService.padNumber(second) for second in $ctrl.selectOptions.seconds\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                        </div>\\n                    </div>\\n                    <div class=\"tab-pane\"\\n                         ng-show=\"!$ctrl.parsedOptions.hideHourlyTab\"\\n                         ng-class=\"{\\'active\\': $ctrl.activeTab === \\'hourly\\'}\">\\n                        <div class=\"well well-small\">\\n                            {{ \\'EVERY\\' | translate}}\\n                            <select class=\"hours\"\\n                                    name=\"hourlyHours\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'hourly\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.hourly.hours\"\\n                                    ng-required=\"$ctrl.activeTab === \\'hourly\\'\"\\n                                    ng-options=\"hour as hour for hour in $ctrl.selectOptions.hours\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'HOUR_ON_MINUTE\\' | translate}}\\n                            <select class=\"minutes\"\\n                                    name=\"hourlyMinutes\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'hourly\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.hourly.minutes\"\\n                                    ng-required=\"$ctrl.activeTab === \\'hourly\\'\"\\n                                    ng-options=\"minute as $ctrl.cronGenService.padNumber(minute) for minute in $ctrl.selectOptions.fullMinutes\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            <span ng-show=\"!$ctrl.parsedOptions.hideSeconds\">{{ \\'AND_SECOND\\' | translate}}</span>\\n                            <select class=\"seconds\"\\n                                    name=\"hourlySeconds\"\\n                                    ng-show=\"!$ctrl.parsedOptions.hideSeconds\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'hourly\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.hourly.seconds\"\\n                                    ng-required=\"$ctrl.activeTab === \\'hourly\\'\"\\n                                    ng-options=\"second as $ctrl.cronGenService.padNumber(second) for second in $ctrl.selectOptions.seconds\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                        </div>\\n                    </div>\\n                    <div class=\"tab-pane\"\\n                         ng-show=\"!$ctrl.parsedOptions.hideDailyTab\"\\n                         ng-class=\"{\\'active\\': $ctrl.activeTab === \\'daily\\'}\">\\n                        <div class=\"well well-small\">\\n                            <input type=\"radio\"\\n                                   value=\"everyDays\"\\n                                   name=\"daily-radio\"\\n                                   ng-disabled=\"$ctrl.ngDisabled\"\\n                                   ng-change=\"$ctrl.regenerateCron()\"\\n                                   ng-model=\"$ctrl.state.daily.subTab\"\\n                                   ng-class=\"$ctrl.state.formRadioClass\"\\n                                   checked=\"checked\">\\n                            {{ \\'EVERY\\' | translate}}\\n                            <select class=\"days\"\\n                                    name=\"dailyEveryDaysDays\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'daily\\' || $ctrl.state.daily.subTab !== \\'everyDays\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.daily.everyDays.days\"\\n                                    ng-required=\"$ctrl.activeTab === \\'daily\\' && $ctrl.state.daily.subTab === \\'everyDays\\'\"\\n                                    ng-options=\"monthDay as monthDay for monthDay in $ctrl.selectOptions.monthDays\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'DAY_AT\\' | translate}}\\n                            <cron-gen-time-select\\n                                    is-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'daily\\' || $ctrl.state.daily.subTab !== \\'everyDays\\'\"\\n                                    on-change=\"$ctrl.regenerateCron()\"\\n                                    name-prefix=\"dailyEveryDays\"\\n                                    is-required=\"$ctrl.activeTab === \\'daily\\' && $ctrl.state.daily.subTab === \\'everyDays\\'\"\\n                                    model=\"$ctrl.state.daily.everyDays\"\\n                                    select-class=\"$ctrl.parsedOptions.formSelectClass\"\\n                                    use-24-hour-time=\"$ctrl.parsedOptions.use24HourTime\"\\n                                    hide-seconds=\"$ctrl.parsedOptions.hideSeconds\">\\n                            </cron-gen-time-select>\\n                        </div>\\n                        <div class=\"well well-small\">\\n                            <input type=\"radio\"\\n                                   value=\"everyWeekDay\"\\n                                   ng-disabled=\"$ctrl.ngDisabled\"\\n                                   ng-change=\"$ctrl.regenerateCron()\"\\n                                   ng-model=\"$ctrl.state.daily.subTab\"\\n                                   ng-class=\"$ctrl.state.formRadioClass\"\\n                                   name=\"daily-radio\">\\n                            {{ \\'EVERY_WEEK_WORKING_DAY\\' | translate}}\\n                            <cron-gen-time-select\\n                                    is-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'daily\\' || $ctrl.state.daily.subTab !== \\'everyWeekDay\\'\"\\n                                    on-change=\"$ctrl.regenerateCron()\"\\n                                    name-prefix=\"dailyEveryWeekDay\"\\n                                    is-required=\"$ctrl.activeTab === \\'daily\\' && $ctrl.state.daily.subTab === \\'everyWeekDay\\'\"\\n                                    model=\"$ctrl.state.daily.everyWeekDay\"\\n                                    select-class=\"$ctrl.parsedOptions.formSelectClass\"\\n                                    use-24-hour-time=\"$ctrl.parsedOptions.use24HourTime\"\\n                                    hide-seconds=\"$ctrl.parsedOptions.hideSeconds\">\\n                            </cron-gen-time-select>\\n                        </div>\\n                    </div>\\n                    <div class=\"tab-pane\"\\n                         ng-show=\"!$ctrl.parsedOptions.hideWeeklyTab\"\\n                         ng-class=\"{\\'active\\': $ctrl.activeTab === \\'weekly\\'}\">\\n                        <div class=\"well well-small row\">\\n                            <div class=\"col-sm-6\">\\n                                <input type=\"checkbox\"\\n                                       name=\"weeklyMON\"\\n                                       ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'weekly\\'\"\\n                                       ng-change=\"$ctrl.regenerateCron()\"\\n                                       ng-model=\"$ctrl.state.weekly.MON\"\\n                                       ng-class=\"$ctrl.parsedOptions.formCheckboxClass\">\\n                                {{ \\'MONDAY\\' | translate}}\\n                            </div>\\n                            <div class=\"col-sm-6\">\\n                                <input type=\"checkbox\"\\n                                       name=\"weeklyTUE\"\\n                                       ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'weekly\\'\"\\n                                       ng-change=\"$ctrl.regenerateCron()\"\\n                                       ng-model=\"$ctrl.state.weekly.TUE\"\\n                                       ng-class=\"$ctrl.parsedOptions.formCheckboxClass\">\\n                                {{ \\'TUESDAY\\' | translate}}\\n                            </div>\\n                            <div class=\"col-sm-6\">\\n                                <input type=\"checkbox\"\\n                                       name=\"weeklyWED\"\\n                                       ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'weekly\\'\"\\n                                       ng-change=\"$ctrl.regenerateCron()\"\\n                                       ng-model=\"$ctrl.state.weekly.WED\"\\n                                       ng-class=\"$ctrl.parsedOptions.formCheckboxClass\">\\n                                {{ \\'WEDNESDAY\\' | translate}}\\n                            </div>\\n                            <div class=\"col-sm-6\">\\n                                <input type=\"checkbox\"\\n                                       name=\"weeklyTHU\"\\n                                       ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'weekly\\'\"\\n                                       ng-change=\"$ctrl.regenerateCron()\"\\n                                       ng-model=\"$ctrl.state.weekly.THU\"\\n                                       ng-class=\"$ctrl.parsedOptions.formCheckboxClass\">\\n                                {{ \\'THURSDAY\\' | translate}}\\n                            </div>\\n                            <div class=\"col-sm-6\">\\n                                <input type=\"checkbox\"\\n                                       name=\"weeklyFRI\"\\n                                       ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'weekly\\'\"\\n                                       ng-change=\"$ctrl.regenerateCron()\"\\n                                       ng-model=\"$ctrl.state.weekly.FRI\"\\n                                       ng-class=\"$ctrl.parsedOptions.formCheckboxClass\">\\n                                {{ \\'FRIDAY\\' | translate}}\\n                            </div>\\n                            <div class=\"col-sm-6\">\\n                                <input type=\"checkbox\"\\n                                       name=\"weeklySAT\"\\n                                       ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'weekly\\'\"\\n                                       ng-change=\"$ctrl.regenerateCron()\"\\n                                       ng-model=\"$ctrl.state.weekly.SAT\"\\n                                       ng-class=\"$ctrl.parsedOptions.formCheckboxClass\">\\n                                {{ \\'SATURDAY\\' | translate}}\\n                            </div>\\n                            <div class=\"col-sm-6\">\\n                                <input type=\"checkbox\"\\n                                       name=\"weeklySUN\"\\n                                       ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'weekly\\'\"\\n                                       ng-change=\"$ctrl.regenerateCron()\"\\n                                       ng-model=\"$ctrl.state.weekly.SUN\"\\n                                       ng-class=\"$ctrl.parsedOptions.formCheckboxClass\">\\n                                {{ \\'SUNDAY\\' | translate}}\\n                            </div>\\n                        </div>\\n                        {{ \\'START_TIME\\' | translate}}\\n                        <cron-gen-time-select\\n                                is-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'weekly\\'\"\\n                                on-change=\"$ctrl.regenerateCron()\"\\n                                name-prefix=\"weekly\"\\n                                is-required=\"$ctrl.activeTab === \\'weekly\\'\"\\n                                model=\"$ctrl.state.weekly\"\\n                                select-class=\"$ctrl.parsedOptions.formSelectClass\"\\n                                use-24-hour-time=\"$ctrl.parsedOptions.use24HourTime\"\\n                                hide-seconds=\"$ctrl.parsedOptions.hideSeconds\">\\n                        </cron-gen-time-select>\\n                    </div>\\n                    <div class=\"tab-pane\"\\n                         ng-show=\"!$ctrl.parsedOptions.hideMonthlyTab\"\\n                         ng-class=\"{\\'active\\': $ctrl.activeTab === \\'monthly\\'}\">\\n                        <div class=\"well well-small\">\\n                            <input type=\"radio\"\\n                                   value=\"specificDay\"\\n                                   ng-disabled=\"$ctrl.ngDisabled\"\\n                                   ng-change=\"$ctrl.regenerateCron()\"\\n                                   ng-model=\"$ctrl.state.monthly.subTab\"\\n                                   ng-class=\"$ctrl.state.formRadioClass\"\\n                                   name=\"monthly-radio\"\\n                                   checked=\"checked\">\\n                            {{ \\'ON_THE\\' | translate}}\\n                            <select class=\"month-days\"\\n                                    name=\"monthlySpecificDayDay\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'monthly\\' || $ctrl.state.monthly.subTab !== \\'specificDay\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.monthly.specificDay.day\"\\n                                    ng-required=\"$ctrl.activeTab === \\'monthly\\' && $ctrl.state.monthly.subTab === \\'specificDay\\'\"\\n                                    ng-options=\"monthDaysWithLast as $ctrl.monthDayDisplay(monthDaysWithLast) for monthDaysWithLast in $ctrl.selectOptions.monthDaysWithLasts\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'OF_EVERY\\' | translate}}\\n                            <select class=\"months-small\"\\n                                    name=\"monthlySpecificDayMonths\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'monthly\\' || $ctrl.state.monthly.subTab !== \\'specificDay\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.monthly.specificDay.months\"\\n                                    ng-required=\"$ctrl.activeTab === \\'monthly\\' && $ctrl.state.monthly.subTab === \\'specificDay\\'\"\\n                                    ng-options=\"month as month for month in $ctrl.selectOptions.months\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'MONTHS_AT\\' | translate}}\\n                            <cron-gen-time-select\\n                                    is-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'monthly\\' || $ctrl.state.monthly.subTab !== \\'specificDay\\'\"\\n                                    on-change=\"$ctrl.regenerateCron()\"\\n                                    name-prefix=\"monthlySpecificDay\"\\n                                    is-required=\"$ctrl.activeTab === \\'monthly\\' && $ctrl.state.monthly.subTab === \\'specificDay\\'\"\\n                                    model=\"$ctrl.state.monthly.specificDay\"\\n                                    select-class=\"$ctrl.parsedOptions.formSelectClass\"\\n                                    use-24-hour-time=\"$ctrl.parsedOptions.use24HourTime\"\\n                                    hide-seconds=\"$ctrl.parsedOptions.hideSeconds\">\\n                            </cron-gen-time-select>\\n                        </div>\\n                        <div class=\"well well-small\" ng-hide=\"$ctrl.cronFormat ==\\'unix\\'\">\\n                            <input type=\"radio\"\\n                                   value=\"specificWeekDay\"\\n                                   ng-disabled=\"$ctrl.ngDisabled\"\\n                                   ng-change=\"$ctrl.regenerateCron()\"\\n                                   ng-model=\"$ctrl.state.monthly.subTab\"\\n                                   ng-class=\"$ctrl.state.formRadioClass\"\\n                                   name=\"monthly-radio\">\\n                            {{ \\'ON_THE\\' | translate}}\\n                            <select class=\"day-order-in-month\"\\n                                    name=\"monthlySpecificWeekDayMonthWeek\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'monthly\\' || $ctrl.state.monthly.subTab !== \\'specificWeekDay\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.monthly.specificWeekDay.monthWeek\"\\n                                    ng-required=\"$ctrl.activeTab === \\'monthly\\' && $ctrl.state.monthly.subTab === \\'specificWeekDay\\'\"\\n                                    ng-options=\"monthWeek as $ctrl.monthWeekDisplay(monthWeek) for monthWeek in $ctrl.selectOptions.monthWeeks\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            <select class=\"week-days\"\\n                                    name=\"monthlySpecificWeekDayDay\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'monthly\\' || $ctrl.state.monthly.subTab !== \\'specificWeekDay\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.monthly.specificWeekDay.day\"\\n                                    ng-required=\"$ctrl.activeTab === \\'monthly\\' && $ctrl.state.monthly.subTab === \\'specificWeekDay\\'\"\\n                                    ng-options=\"day as $ctrl.dayDisplay(day) for day in $ctrl.selectOptions.days\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'OF_EVERY\\' | translate}}\\n                            <select class=\"months-small\"\\n                                    name=\"monthlySpecificWeekDayMonths\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'monthly\\' || $ctrl.state.monthly.subTab !== \\'specificWeekDay\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.monthly.specificWeekDay.months\"\\n                                    ng-required=\"$ctrl.activeTab === \\'monthly\\' && $ctrl.state.monthly.subTab === \\'specificWeekDay\\'\"\\n                                    ng-options=\"month as month for month in $ctrl.selectOptions.months\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'MONTHS_AT\\' | translate}}\\n                            <cron-gen-time-select\\n                                    is-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'monthly\\' || $ctrl.state.monthly.subTab !== \\'specificWeekDay\\'\"\\n                                    on-change=\"$ctrl.regenerateCron()\"\\n                                    name-prefix=\"monthlySpecificWeekDay\"\\n                                    is-required=\"$ctrl.activeTab === \\'monthly\\' && $ctrl.state.monthly.subTab === \\'specificWeekDay\\'\"\\n                                    model=\"$ctrl.state.monthly.specificWeekDay\"\\n                                    select-class=\"$ctrl.parsedOptions.formSelectClass\"\\n                                    use-24-hour-time=\"$ctrl.parsedOptions.use24HourTime\"\\n                                    hide-seconds=\"$ctrl.parsedOptions.hideSeconds\">\\n                            </cron-gen-time-select>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\"tab-pane\"\\n                         ng-show=\"!$ctrl.parsedOptions.hideYearlyTab\"\\n                         ng-class=\"{\\'active\\': $ctrl.activeTab === \\'yearly\\'}\">\\n                        <div class=\"well well-small\">\\n                            <input type=\"radio\"\\n                                   value=\"specificMonthDay\"\\n                                   ng-disabled=\"$ctrl.ngDisabled\"\\n                                   ng-change=\"$ctrl.regenerateCron()\"\\n                                   ng-model=\"$ctrl.state.yearly.subTab\"\\n                                   ng-class=\"$ctrl.state.formRadioClass\"\\n                                   name=\"yearly-radio\">\\n                            {{ \\'EVERY_MONTH\\' | translate}}\\n                            <select class=\"months\"\\n                                    name=\"yearlySpecificMonthDayMonth\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'yearly\\' || $ctrl.state.yearly.subTab !== \\'specificMonthDay\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.yearly.specificMonthDay.month\"\\n                                    ng-required=\"$ctrl.activeTab === \\'yearly\\' && $ctrl.state.yearly.subTab === \\'specificMonthDay\\'\"\\n                                    ng-options=\"month as $ctrl.monthDisplay(month) for month in $ctrl.selectOptions.months\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'ON_THE_SMALL\\' | translate}}\\n                            <select class=\"month-days\"\\n                                    name=\"yearlySpecificMonthDayDay\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'yearly\\' || $ctrl.state.yearly.subTab !== \\'specificMonthDay\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.yearly.specificMonthDay.day\"\\n                                    ng-required=\"$ctrl.activeTab === \\'yearly\\' && $ctrl.state.yearly.subTab === \\'specificMonthDay\\'\"\\n                                    ng-options=\"monthDaysWithLast as $ctrl.monthDayDisplay(monthDaysWithLast) for monthDaysWithLast in $ctrl.selectOptions.monthDaysWithLasts\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'AT\\' | translate}}\\n                            <cron-gen-time-select\\n                                    is-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'yearly\\' || $ctrl.state.yearly.subTab !== \\'specificMonthDay\\'\"\\n                                    on-change=\"$ctrl.regenerateCron()\"\\n                                    is-required=\"$ctrl.activeTab === \\'yearly\\' && $ctrl.state.yearly.subTab === \\'specificMonthDay\\'\"\\n                                    name-prefix=\"yearlySpecificMonthDay\"\\n                                    model=\"$ctrl.state.yearly.specificMonthDay\"\\n                                    select-class=\"$ctrl.parsedOptions.formSelectClass\"\\n                                    use-24-hour-time=\"$ctrl.parsedOptions.use24HourTime\"\\n                                    hide-seconds=\"$ctrl.parsedOptions.hideSeconds\">\\n                            </cron-gen-time-select>\\n                        </div>\\n                        <div class=\"well well-small\" ng-hide=\"$ctrl.cronFormat ==\\'unix\\'\">\\n                            <input type=\"radio\"\\n                                   value=\"specificMonthWeek\"\\n                                   ng-disabled=\"$ctrl.ngDisabled\"\\n                                   ng-change=\"$ctrl.regenerateCron()\"\\n                                   ng-model=\"$ctrl.state.yearly.subTab\"\\n                                   ng-class=\"$ctrl.state.formRadioClass\"\\n                                   name=\"yearly-radio\">\\n                            {{ \\'EVERY_MONTH\\' | translate}}\\n                            <select class=\"day-order-in-month\"\\n                                    name=\"yearlySpecificMonthWeekMonthWeek\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'yearly\\' || $ctrl.state.yearly.subTab !== \\'specificMonthWeek\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.yearly.specificMonthWeek.monthWeek\"\\n                                    ng-required=\"$ctrl.activeTab === \\'yearly\\' && $ctrl.state.yearly.subTab === \\'specificMonthWeek\\'\"\\n                                    ng-options=\"monthWeek as $ctrl.monthWeekDisplay(monthWeek) for monthWeek in $ctrl.selectOptions.monthWeeks\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            <select class=\"week-days\"\\n                                    name=\"yearlySpecificMonthWeekMonthDay\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'yearly\\' || $ctrl.state.yearly.subTab !== \\'specificMonthWeek\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.yearly.specificMonthWeek.day\"\\n                                    ng-required=\"$ctrl.activeTab === \\'yearly\\' && $ctrl.state.yearly.subTab === \\'specificMonthWeek\\'\"\\n                                    ng-options=\"day as $ctrl.dayDisplay(day) for day in $ctrl.selectOptions.days\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'OF\\' | translate}}\\n                            <select class=\"months\"\\n                                    name=\"yearlySpecificMonthWeekMontMonth\"\\n                                    ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'yearly\\' || $ctrl.state.yearly.subTab !== \\'specificMonthWeek\\'\"\\n                                    ng-change=\"$ctrl.regenerateCron()\"\\n                                    ng-model=\"$ctrl.state.yearly.specificMonthWeek.month\"\\n                                    ng-required=\"$ctrl.activeTab === \\'yearly\\' && $ctrl.state.yearly.subTab === \\'specificMonthWeek\\'\"\\n                                    ng-options=\"month as $ctrl.monthDisplay(month) for month in $ctrl.selectOptions.months\"\\n                                    ng-class=\"$ctrl.parsedOptions.formSelectClass\">\\n                            </select>\\n                            {{ \\'AT\\' | translate}}\\n                            <cron-gen-time-select\\n                                    is-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'yearly\\' || $ctrl.state.yearly.subTab !== \\'specificMonthWeek\\'\"\\n                                    on-change=\"$ctrl.regenerateCron()\"\\n                                    name-prefix=\"yearlySpecificMonthWeek\"\\n                                    is-required=\"$ctrl.activeTab === \\'yearly\\' && $ctrl.state.yearly.subTab === \\'specificMonthWeek\\'\"\\n                                    model=\"$ctrl.state.yearly.specificMonthWeek\"\\n                                    select-class=\"$ctrl.parsedOptions.formSelectClass\"\\n                                    use-24-hour-time=\"$ctrl.parsedOptions.use24HourTime\"\\n                                    hide-seconds=\"$ctrl.parsedOptions.hideSeconds\">\\n                            </cron-gen-time-select>\\n                        </div>\\n                    </div>\\n                    <div class=\"tab-pane\"\\n                         ng-show=\"!$ctrl.parsedOptions.hideAdvancedTab\"\\n                         ng-class=\"{\\'active\\': $ctrl.activeTab === \\'advanced\\'}\">\\n                        {{ \\'CRON_EXPRESSION\\' | translate}}\\n                        <input type=\"text\"\\n                               class=\"advanced-cron-gen-input\"\\n                               name=\"advancedExpression\"\\n                               ng-disabled=\"$ctrl.ngDisabled || $ctrl.activeTab !== \\'advanced\\'\"\\n                               ng-change=\"$ctrl.regenerateCron()\"\\n                               ng-model=\"$ctrl.state.advanced.expression\"\\n                               ng-required=\"$ctrl.activeTab === \\'advanced\\'\"\\n                               ng-class=\"$ctrl.parsedOptions.formInputClass\">\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>');}]);"]}